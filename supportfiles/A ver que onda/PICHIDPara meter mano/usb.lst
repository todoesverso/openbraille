gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : FreeWare ANSI-C Compiler
               00003 ; Version 2.6.0 #4309 (Nov 10 2006)
               00004 ; This file generated Mon Feb 25 20:19:46 2008
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f4550
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _deviceAddress
               00016         global _HIDTxReport
               00017         global _HIDRxReport
               00018         global _EnableUSBModule
               00019         global _ProcessUSBTransactions
               00020         global _deviceState
               00021         global _remoteWakeup
               00022         global _selfPowered
               00023         global _currentConfiguration
               00024         global _ctrlTransferStage
               00025         global _HIDPostProcess
               00026         global _requestHandled
               00027         global _outPtr
               00028         global _inPtr
               00029         global _wCount
               00030         global _hidIdleRate
               00031         global _hidProtocol
               00032         global _hidRxLen
               00033         global _ep0Bo
               00034         global _ep0Bi
               00035         global _ep1Bo
               00036         global _ep1Bi
               00037         global _SetupPacket
               00038         global _controlTransferBuffer
               00039         global _HIDRxBuffer
               00040         global _HIDTxBuffer
               00041         global _HIDInitEndpoint
               00042         global _HIDGetReport
               00043         global _HIDSetReport
               00044         global _ProcessHIDRequest
               00045         global _ProcessStandardRequest
               00046         global _InDataStage
               00047         global _OutDataStage
               00048         global _SetupStage
               00049         global _WaitForSetupStage
               00050         global _ProcessControlTransfer
               00051         global _UnSuspend
               00052         global _StartOfFrame
               00053         global _Stall
               00054         global _Suspend
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         global _BusReset
               00056         global _deviceDescriptor
               00057         global _configDescriptor
               00058         global _HIDReport
               00059         global _stringDescriptor0
               00060         global _stringDescriptor1
               00061         global _stringDescriptor2
               00062         global _dataEEPROM
               00063 
               00064 ;--------------------------------------------------------
               00065 ; extern variables in this module
               00066 ;--------------------------------------------------------
               00067         extern __gptrget1
               00068         extern __gptrput1
               00069         extern _SPPDATAbits
               00070         extern _SPPCFGbits
               00071         extern _SPPEPSbits
               00072         extern _SPPCONbits
               00073         extern _UFRMLbits
               00074         extern _UFRMHbits
               00075         extern _UIRbits
               00076         extern _UIEbits
               00077         extern _UEIRbits
               00078         extern _UEIEbits
               00079         extern _USTATbits
               00080         extern _UCONbits
               00081         extern _UADDRbits
               00082         extern _UCFGbits
               00083         extern _UEP0bits
               00084         extern _UEP1bits
               00085         extern _UEP2bits
               00086         extern _UEP3bits
               00087         extern _UEP4bits
               00088         extern _UEP5bits
               00089         extern _UEP6bits
               00090         extern _UEP7bits
               00091         extern _UEP8bits
               00092         extern _UEP9bits
               00093         extern _UEP10bits
               00094         extern _UEP11bits
               00095         extern _UEP12bits
               00096         extern _UEP13bits
               00097         extern _UEP14bits
               00098         extern _UEP15bits
               00099         extern _PORTAbits
               00100         extern _PORTBbits
               00101         extern _PORTCbits
               00102         extern _PORTEbits
               00103         extern _LATAbits
               00104         extern _LATBbits
               00105         extern _LATCbits
               00106         extern _TRISAbits
               00107         extern _TRISBbits
               00108         extern _TRISCbits
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _OSCTUNEbits
               00110         extern _PIE1bits
               00111         extern _PIR1bits
               00112         extern _IPR1bits
               00113         extern _PIE2bits
               00114         extern _PIR2bits
               00115         extern _IPR2bits
               00116         extern _EECON1bits
               00117         extern _RCSTAbits
               00118         extern _TXSTAbits
               00119         extern _T3CONbits
               00120         extern _CMCONbits
               00121         extern _CVRCONbits
               00122         extern _ECCP1ASbits
               00123         extern _ECCP1DELbits
               00124         extern _BAUDCONbits
               00125         extern _CCP2CONbits
               00126         extern _CCP1CONbits
               00127         extern _ADCON2bits
               00128         extern _ADCON1bits
               00129         extern _ADCON0bits
               00130         extern _SSPCON2bits
               00131         extern _SSPCON1bits
               00132         extern _SSPSTATbits
               00133         extern _T2CONbits
               00134         extern _T1CONbits
               00135         extern _RCONbits
               00136         extern _WDTCONbits
               00137         extern _HLVDCONbits
               00138         extern _OSCCONbits
               00139         extern _T0CONbits
               00140         extern _STATUSbits
               00141         extern _FSR2Hbits
               00142         extern _BSRbits
               00143         extern _FSR1Hbits
               00144         extern _FSR0Hbits
               00145         extern _INTCON3bits
               00146         extern _INTCON2bits
               00147         extern _INTCONbits
               00148         extern _TBLPTRUbits
               00149         extern _PCLATHbits
               00150         extern _PCLATUbits
               00151         extern _STKPTRbits
               00152         extern _TOSUbits
               00153         extern _stdin
               00154         extern _stdout
               00155         extern _SPPDATA
               00156         extern _SPPCFG
               00157         extern _SPPEPS
               00158         extern _SPPCON
               00159         extern _UFRML
               00160         extern _UFRMH
               00161         extern _UIR
               00162         extern _UIE
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _UEIR
               00164         extern _UEIE
               00165         extern _USTAT
               00166         extern _UCON
               00167         extern _UADDR
               00168         extern _UCFG
               00169         extern _UEP0
               00170         extern _UEP1
               00171         extern _UEP2
               00172         extern _UEP3
               00173         extern _UEP4
               00174         extern _UEP5
               00175         extern _UEP6
               00176         extern _UEP7
               00177         extern _UEP8
               00178         extern _UEP9
               00179         extern _UEP10
               00180         extern _UEP11
               00181         extern _UEP12
               00182         extern _UEP13
               00183         extern _UEP14
               00184         extern _UEP15
               00185         extern _PORTA
               00186         extern _PORTB
               00187         extern _PORTC
               00188         extern _PORTE
               00189         extern _LATA
               00190         extern _LATB
               00191         extern _LATC
               00192         extern _TRISA
               00193         extern _TRISB
               00194         extern _TRISC
               00195         extern _OSCTUNE
               00196         extern _PIE1
               00197         extern _PIR1
               00198         extern _IPR1
               00199         extern _PIE2
               00200         extern _PIR2
               00201         extern _IPR2
               00202         extern _EECON1
               00203         extern _EECON2
               00204         extern _EEDATA
               00205         extern _EEADR
               00206         extern _RCSTA
               00207         extern _TXSTA
               00208         extern _TXREG
               00209         extern _RCREG
               00210         extern _SPBRG
               00211         extern _SPBRGH
               00212         extern _T3CON
               00213         extern _TMR3L
               00214         extern _TMR3H
               00215         extern _CMCON
               00216         extern _CVRCON
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _ECCP1AS
               00218         extern _ECCP1DEL
               00219         extern _BAUDCON
               00220         extern _CCP2CON
               00221         extern _CCPR2L
               00222         extern _CCPR2H
               00223         extern _CCP1CON
               00224         extern _CCPR1L
               00225         extern _CCPR1H
               00226         extern _ADCON2
               00227         extern _ADCON1
               00228         extern _ADCON0
               00229         extern _ADRESL
               00230         extern _ADRESH
               00231         extern _SSPCON2
               00232         extern _SSPCON1
               00233         extern _SSPSTAT
               00234         extern _SSPADD
               00235         extern _SSPBUF
               00236         extern _T2CON
               00237         extern _PR2
               00238         extern _TMR2
               00239         extern _T1CON
               00240         extern _TMR1L
               00241         extern _TMR1H
               00242         extern _RCON
               00243         extern _WDTCON
               00244         extern _HLVDCON
               00245         extern _OSCCON
               00246         extern _T0CON
               00247         extern _TMR0L
               00248         extern _TMR0H
               00249         extern _STATUS
               00250         extern _FSR2L
               00251         extern _FSR2H
               00252         extern _PLUSW2
               00253         extern _PREINC2
               00254         extern _POSTDEC2
               00255         extern _POSTINC2
               00256         extern _INDF2
               00257         extern _BSR
               00258         extern _FSR1L
               00259         extern _FSR1H
               00260         extern _PLUSW1
               00261         extern _PREINC1
               00262         extern _POSTDEC1
               00263         extern _POSTINC1
               00264         extern _INDF1
               00265         extern _WREG
               00266         extern _FSR0L
               00267         extern _FSR0H
               00268         extern _PLUSW0
               00269         extern _PREINC0
               00270         extern _POSTDEC0
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _POSTINC0
               00272         extern _INDF0
               00273         extern _INTCON3
               00274         extern _INTCON2
               00275         extern _INTCON
               00276         extern _PRODL
               00277         extern _PRODH
               00278         extern _TABLAT
               00279         extern _TBLPTRL
               00280         extern _TBLPTRH
               00281         extern _TBLPTRU
               00282         extern _PCL
               00283         extern _PCLATH
               00284         extern _PCLATU
               00285         extern _STKPTR
               00286         extern _TOSL
               00287         extern _TOSH
               00288         extern _TOSU
               00289         extern _GetInputReport
               00290         extern _SetupOutputReport
               00291         extern _SetOutputReport
               00292         extern _GetFeatureReport
               00293         extern _SetupFeatureReport
               00294         extern _SetFeatureReport
               00295 ;--------------------------------------------------------
               00296 ;       Equates to used internal registers
               00297 ;--------------------------------------------------------
  00000FD8     00298 STATUS  equ     0xfd8
  00000FE8     00299 WREG    equ     0xfe8
  00000FF6     00300 TBLPTRL equ     0xff6
  00000FF7     00301 TBLPTRH equ     0xff7
  00000FF8     00302 TBLPTRU equ     0xff8
  00000FF5     00303 TABLAT  equ     0xff5
  00000FE9     00304 FSR0L   equ     0xfe9
  00000FEA     00305 FSR0H   equ     0xfea
  00000FE1     00306 FSR1L   equ     0xfe1
  00000FD9     00307 FSR2L   equ     0xfd9
  00000FEF     00308 INDF0   equ     0xfef
  00000FE5     00309 POSTDEC1        equ     0xfe5
  00000FE4     00310 PREINC1 equ     0xfe4
  00000FDB     00311 PLUSW2  equ     0xfdb
  00000FF3     00312 PRODL   equ     0xff3
  00000FF4     00313 PRODH   equ     0xff4
               00314 
               00315 
               00316 ; Internal registers
               00317 .registers      udata_ovr       0x0000
               00318 r0x00   res     1
               00319 r0x01   res     1
               00320 r0x02   res     1
               00321 r0x03   res     1
               00322 r0x04   res     1
               00323 r0x05   res     1
               00324 r0x06   res     1
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325 r0x07   res     1
               00326 r0x08   res     1
               00327 r0x09   res     1
               00328 
               00329 
               00330 usbram5 udata
               00331 _HIDTxBuffer    res     32
               00332 _HIDRxBuffer    res     32
               00333 _SetupPacket    res     64
               00334 _controlTransferBuffer  res     32
               00335 
               00336 udata_usb_0     udata
               00337 _deviceAddress  res     1
               00338 
               00339 udata_usb_1     udata
               00340 _hidRxLen       res     1
               00341 
               00342 udata_usb_2     udata
               00343 _requestHandled res     1
               00344 
               00345 udata_usb_3     udata
               00346 _outPtr res     3
               00347 
               00348 udata_usb_4     udata
               00349 _wCount res     2
               00350 
               00351 udata_usb_5     udata
               00352 _HIDPostProcess res     1
               00353 
               00354 udata_usb_6     udata
               00355 _hidIdleRate    res     1
               00356 
               00357 udata_usb_7     udata
               00358 _hidProtocol    res     1
               00359 
               00360 udata_usb_8     udata
               00361 _inPtr  res     3
               00362 
               00363 udata_usb_9     udata
               00364 _selfPowered    res     1
               00365 
               00366 udata_usb_10    udata
               00367 _remoteWakeup   res     1
               00368 
               00369 udata_usb_11    udata
               00370 _deviceState    res     1
               00371 
               00372 udata_usb_12    udata
               00373 _currentConfiguration   res     1
               00374 
               00375 udata_usb_13    udata
               00376 _ctrlTransferStage      res     1
               00377 
               00378 
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379 ustat_usb_00    udata   0X0400
               00380 _ep0Bo  res     4
               00381 _ep0Bi  res     4
               00382 _ep1Bo  res     4
               00383 _ep1Bi  res     4
               00384 
               00385 ;--------------------------------------------------------
               00386 ; global & static initialisations
               00387 ;--------------------------------------------------------
               00388 ; ; Starting pCode block for absolute Ival
               00389 S_usb__dataEEPROM       code    0XF00000
F00000           00390 _dataEEPROM:
F00000 0000 0001 00391         DB      0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00
F00004 0002 0003
F00008 0004 0005
F0000C 0006 0007 00392         DB      0x06, 0x00, 0x07, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x33, 0x00
F00010 0030 0031
F00014 0032 0033
F00018 0034 0035 00393         DB      0x34, 0x00, 0x35, 0x00, 0x36, 0x00, 0x37, 0x00, 0x38, 0x00, 0x39, 0x00
F0001C 0036 0037
F00020 0038 0039
F00024 0061 0062 00394         DB      0x61, 0x00, 0x62, 0x00, 0x63, 0x00, 0x64, 0x00, 0x65, 0x00, 0x66, 0x00
F00028 0063 0064
F0002C 0065 0066
               00395 
               00396 ; I code from now on!
               00397 ; ; Starting pCode block
               00398 S_usb__ProcessUSBTransactions   code
0000           00399 _ProcessUSBTransactions:
               00400 ;       .line   1106; usb.c     void ProcessUSBTransactions(void)
0000 C000 FFE5 00401         MOVFF   r0x00, POSTDEC1
               00402 ; #     MOVF    _deviceState, W, B
               00403 ; #     BTFSS   STATUS, 2
               00404 ; #     GOTO    _00629_DS_
               00405 ; #     GOTO    _00655_DS_
               00406 ; #     BTFSS   _UIRbits, 2
               00407 ; ;     peep 1 - test/jump to test/skip
0004 0000      00408         BANKSEL _deviceState
               00409 ;       .line   1109; usb.c     if(deviceState == DETACHED)
0006 5100      00410         MOVF    _deviceState, W, B
               00411 ;       .line   1110; usb.c     return;
0008 E000      00412         BZ      _00655_DS_
               00413 ;       .line   1113; usb.c     if(UIRbits.ACTIVIF && UIEbits.ACTIVIE)
000A A400      00414         BTFSS   _UIRbits, 2
               00415 ; #     GOTO    _00631_DS_
               00416 ; #     BTFSS   _UIEbits, 2
               00417 ; #     GOTO    _00631_DS_
               00418 ; #     CALL    _UnSuspend
               00419 ; #     CLRF    r0x00
               00420 ; ;     peep 1 - test/jump to test/skip
               00421 ;       .line   1114; usb.c     UnSuspend();
000C D000      00422         BRA     _00631_DS_
               00423 ;       .line   1118; usb.c     if(UCONbits.SUSPND == 1)
000E B400      00424         BTFSC   _UIEbits, 2
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0010 EC00 F000 00425         CALL    _UnSuspend
0014           00426 _00631_DS_:
0014 6A00      00427         CLRF    r0x00
0016 B200      00428         BTFSC   _UCONbits, 1
0018 2A00      00429         INCF    r0x00, F
001A 5000      00430         MOVF    r0x00, W
001C 0A01      00431         XORLW   0x01
               00432 ;       .line   1119; usb.c     return;
001E E000      00433         BZ      _00655_DS_
               00434 ;       .line   1122; usb.c     if (UIRbits.URSTIF && UIEbits.URSTIE)
0020 A000      00435         BTFSS   _UIRbits, 0
               00436 ; #     GOTO    _00636_DS_
               00437 ; #     BTFSS   _UIEbits, 0
               00438 ; #     GOTO    _00636_DS_
               00439 ; #     CALL    _BusReset
               00440 ; #     BTFSS   _UIRbits, 4
               00441 ; ;     peep 1 - test/jump to test/skip
               00442 ;       .line   1124; usb.c     BusReset();
0022 D000      00443         BRA     _00636_DS_
               00444 ;       .line   1127; usb.c     if (UIRbits.IDLEIF && UIEbits.IDLEIE)
0024 B000      00445         BTFSC   _UIEbits, 0
0026 EC00 F000 00446         CALL    _BusReset
002A           00447 _00636_DS_:
002A A800      00448         BTFSS   _UIRbits, 4
               00449 ; #     GOTO    _00639_DS_
               00450 ; #     BTFSS   _UIEbits, 4
               00451 ; #     GOTO    _00639_DS_
               00452 ; #     CALL    _Suspend
               00453 ; #     BTFSS   _UIRbits, 6
               00454 ; ;     peep 1 - test/jump to test/skip
               00455 ;       .line   1130; usb.c     Suspend();
002C D000      00456         BRA     _00639_DS_
               00457 ;       .line   1132; usb.c     if (UIRbits.SOFIF && UIEbits.SOFIE)
002E B800      00458         BTFSC   _UIEbits, 4
0030 EC00 F000 00459         CALL    _Suspend
0034           00460 _00639_DS_:
0034 AC00      00461         BTFSS   _UIRbits, 6
               00462 ; #     GOTO    _00642_DS_
               00463 ; #     BTFSS   _UIEbits, 6
               00464 ; #     GOTO    _00642_DS_
               00465 ; #     CALL    _StartOfFrame
               00466 ; #     BTFSS   _UIRbits, 5
               00467 ; ;     peep 1 - test/jump to test/skip
               00468 ;       .line   1134; usb.c     StartOfFrame();
0036 D000      00469         BRA     _00642_DS_
               00470 ;       .line   1136; usb.c     if (UIRbits.STALLIF && UIEbits.STALLIE)
0038 BC00      00471         BTFSC   _UIEbits, 6
003A EC00 F000 00472         CALL    _StartOfFrame
003E           00473 _00642_DS_:
003E AA00      00474         BTFSS   _UIRbits, 5
               00475 ; #     GOTO    _00645_DS_
               00476 ; #     BTFSS   _UIEbits, 5
               00477 ; #     GOTO    _00645_DS_
               00478 ; #     CALL    _Stall
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00479 ; #     BTFSS   _UIRbits, 1
               00480 ; ;     peep 1 - test/jump to test/skip
               00481 ;       .line   1138; usb.c     Stall();
0040 D000      00482         BRA     _00645_DS_
               00483 ;       .line   1141; usb.c     if (UIRbits.UERRIF && UIEbits.UERRIE)
0042 BA00      00484         BTFSC   _UIEbits, 5
0044 EC00 F000 00485         CALL    _Stall
0048           00486 _00645_DS_:
0048 A200      00487         BTFSS   _UIRbits, 1
               00488 ; #     GOTO    _00648_DS_
               00489 ; #     BTFSS   _UIEbits, 1
               00490 ; #     GOTO    _00648_DS_
               00491 ; #     BCF     _UIRbits, 1
               00492 ; #     MOVLW   0x03
               00493 ; ;     peep 1 - test/jump to test/skip
               00494 ;       .line   1146; usb.c     UIRbits.UERRIF = 0;
004A D000      00495         BRA     _00648_DS_
               00496 ;       .line   1150; usb.c     if (deviceState < DEFAULT)
004C B200      00497         BTFSC   _UIEbits, 1
004E 9200      00498         BCF     _UIRbits, 1
0050           00499 _00648_DS_:
0050 0E03      00500         MOVLW   0x03
               00501 ; #     SUBWF   _deviceState, W, B
               00502 ; #     BTFSC   STATUS, 0
               00503 ; #     GOTO    _00651_DS_
               00504 ; #     GOTO    _00655_DS_
               00505 ; #     BTFSS   _UIRbits, 3
               00506 ; ;     peep 1 - test/jump to test/skip
0052 0000      00507         BANKSEL _deviceState
               00508 ;       .line   1151; usb.c     return;
0054 5D00      00509         SUBWF   _deviceState, W, B
               00510 ;       .line   1154; usb.c     if(UIRbits.TRNIF && UIEbits.TRNIE)
0056 E300      00511         BNC     _00655_DS_
0058 A600      00512         BTFSS   _UIRbits, 3
005A D000      00513         BRA     _00655_DS_
005C A600      00514         BTFSS   _UIEbits, 3
005E D000      00515         BRA     _00655_DS_
               00516 ;       .line   1156; usb.c     ProcessControlTransfer();
0060 EC00 F000 00517         CALL    _ProcessControlTransfer
               00518 ;       .line   1159; usb.c     UIRbits.TRNIF = 0;
0064 9600      00519         BCF     _UIRbits, 3
0066           00520 _00655_DS_:
0066 CFE4 F000 00521         MOVFF   PREINC1, r0x00
006A 0012      00522         RETURN  
               00523 
               00524 ; ; Starting pCode block
               00525 S_usb__BusReset code
0000           00526 _BusReset:
               00527 ;       .line   1078; usb.c     void BusReset()
0000 C000 FFE5 00528         MOVFF   r0x00, POSTDEC1
               00529 ;       .line   1080; usb.c     UEIR  = 0x00;
0004 6A00      00530         CLRF    _UEIR
               00531 ;       .line   1081; usb.c     UIR   = 0x00;
0006 6A00      00532         CLRF    _UIR
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00533 ;       .line   1082; usb.c     UEIE  = 0x9f;
0008 0E9F      00534         MOVLW   0x9f
000A 6E00      00535         MOVWF   _UEIE
               00536 ;       .line   1083; usb.c     UIE   = 0x7b;
000C 0E7B      00537         MOVLW   0x7b
000E 6E00      00538         MOVWF   _UIE
               00539 ;       .line   1084; usb.c     UADDR = 0x00;
0010 6A00      00540         CLRF    _UADDR
               00541 ;       .line   1087; usb.c     UEP0 = 0x16;
0012 0E16      00542         MOVLW   0x16
0014 6E00      00543         MOVWF   _UEP0
0016           00544 _00615_DS_:
               00545 ;       .line   1090; usb.c     while (UIRbits.TRNIF == 1)
0016 6A00      00546         CLRF    r0x00
0018 B600      00547         BTFSC   _UIRbits, 3
001A 2A00      00548         INCF    r0x00, F
001C 5000      00549         MOVF    r0x00, W
001E 0A01      00550         XORLW   0x01
0020 E100      00551         BNZ     _00617_DS_
               00552 ;       .line   1091; usb.c     UIRbits.TRNIF = 0;
0022 9600      00553         BCF     _UIRbits, 3
0024 D000      00554         BRA     _00615_DS_
0026           00555 _00617_DS_:
               00556 ;       .line   1094; usb.c     UCONbits.PKTDIS = 0;
0026 9800      00557         BCF     _UCONbits, 4
               00558 ;       .line   1097; usb.c     WaitForSetupStage();
0028 EC00 F000 00559         CALL    _WaitForSetupStage
002C 0000      00560         BANKSEL _remoteWakeup
               00561 ;       .line   1099; usb.c     remoteWakeup = 0;         // Remote wakeup is off by default
002E 6B00      00562         CLRF    _remoteWakeup, B
0030 0000      00563         BANKSEL _selfPowered
               00564 ;       .line   1100; usb.c     selfPowered = 0;          // Self powered is off by default
0032 6B00      00565         CLRF    _selfPowered, B
0034 0000      00566         BANKSEL _currentConfiguration
               00567 ;       .line   1101; usb.c     currentConfiguration = 0; // Clear active configuration
0036 6B00      00568         CLRF    _currentConfiguration, B
               00569 ;       .line   1102; usb.c     deviceState = DEFAULT;
0038 0E03      00570         MOVLW   0x03
003A 0000      00571         BANKSEL _deviceState
003C 6F00      00572         MOVWF   _deviceState, B
003E CFE4 F000 00573         MOVFF   PREINC1, r0x00
0042 0012      00574         RETURN  
               00575 
               00576 ; ; Starting pCode block
               00577 S_usb__Suspend  code
0000           00578 _Suspend:
               00579 ;       .line   1076; usb.c     }
0000 0012      00580         RETURN  
               00581 
               00582 ; ; Starting pCode block
               00583 S_usb__Stall    code
0000           00584 _Stall:
               00585 ;       .line   1033; usb.c     void Stall(void)
0000 C000 FFE5 00586         MOVFF   r0x00, POSTDEC1
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00587 ;       .line   1038; usb.c     if(UEP0bits.EPSTALL == 1)
0004 6A00      00588         CLRF    r0x00
0006 B000      00589         BTFSC   _UEP0bits, 0
0008 2A00      00590         INCF    r0x00, F
000A 5000      00591         MOVF    r0x00, W
000C 0A01      00592         XORLW   0x01
000E E100      00593         BNZ     _00601_DS_
               00594 ;       .line   1041; usb.c     WaitForSetupStage();
0010 EC00 F000 00595         CALL    _WaitForSetupStage
               00596 ;       .line   1042; usb.c     UEP0bits.EPSTALL = 0;
0014 9000      00597         BCF     _UEP0bits, 0
0016           00598 _00601_DS_:
               00599 ;       .line   1044; usb.c     UIRbits.STALLIF = 0;
0016 9A00      00600         BCF     _UIRbits, 5
0018 CFE4 F000 00601         MOVFF   PREINC1, r0x00
001C 0012      00602         RETURN  
               00603 
               00604 ; ; Starting pCode block
               00605 S_usb__StartOfFrame     code
0000           00606 _StartOfFrame:
               00607 ;       .line   1029; usb.c     UIRbits.SOFIF = 0;
0000 9C00      00608         BCF     _UIRbits, 6
0002 0012      00609         RETURN  
               00610 
               00611 ; ; Starting pCode block
               00612 S_usb__UnSuspend        code
0000           00613 _UnSuspend:
               00614 ;       .line   1019; usb.c     UCONbits.SUSPND = 0;
0000 9200      00615         BCF     _UCONbits, 1
               00616 ;       .line   1020; usb.c     UIEbits.ACTIVIE = 0;
0002 9400      00617         BCF     _UIEbits, 2
               00618 ;       .line   1021; usb.c     UIRbits.ACTIVIF = 0;
0004 9400      00619         BCF     _UIRbits, 2
0006 0012      00620         RETURN  
               00621 
               00622 ; ; Starting pCode block
               00623 S_usb__EnableUSBModule  code
0000           00624 _EnableUSBModule:
               00625 ;       .line   986; usb.c      if(UCONbits.USBEN == 0)
0000 B600      00626         BTFSC   _UCONbits, 3
0002 D000      00627         BRA     _00577_DS_
               00628 ;       .line   991; usb.c      UCON = 0;
0004 6A00      00629         CLRF    _UCON
               00630 ;       .line   992; usb.c      UIE = 0;
0006 6A00      00631         CLRF    _UIE
               00632 ;       .line   993; usb.c      UCONbits.USBEN = 1;
0008 8600      00633         BSF     _UCONbits, 3
               00634 ;       .line   994; usb.c      deviceState = ATTACHED;
000A 0E01      00635         MOVLW   0x01
000C 0000      00636         BANKSEL _deviceState
000E 6F00      00637         MOVWF   _deviceState, B
0010           00638 _00577_DS_:
0010 0000      00639         BANKSEL _deviceState
               00640 ;       .line   999; usb.c      if ((deviceState == ATTACHED) && !UCONbits.SE0)
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0012 5100      00641         MOVF    _deviceState, W, B
0014 0A01      00642         XORLW   0x01
0016 E100      00643         BNZ     _00581_DS_
0018 BA00      00644         BTFSC   _UCONbits, 5
001A D000      00645         BRA     _00581_DS_
               00646 ;       .line   1001; usb.c     UIR = 0;
001C 6A00      00647         CLRF    _UIR
               00648 ;       .line   1002; usb.c     UIE = 0;
001E 6A00      00649         CLRF    _UIE
               00650 ;       .line   1003; usb.c     UIEbits.URSTIE = 1;
0020 8000      00651         BSF     _UIEbits, 0
               00652 ;       .line   1004; usb.c     UIEbits.IDLEIE = 1;
0022 8800      00653         BSF     _UIEbits, 4
               00654 ;       .line   1005; usb.c     deviceState = POWERED;
0024 0E02      00655         MOVLW   0x02
0026 0000      00656         BANKSEL _deviceState
0028 6F00      00657         MOVWF   _deviceState, B
002A           00658 _00581_DS_:
002A 0012      00659         RETURN  
               00660 
               00661 ; ; Starting pCode block
               00662 S_usb__ProcessControlTransfer   code
0000           00663 _ProcessControlTransfer:
               00664 ;       .line   884; usb.c      void ProcessControlTransfer(void)
0000 C000 FFE5 00665         MOVFF   r0x00, POSTDEC1
               00666 ;       .line   889; usb.c      if (USTAT == 0)
0004 5000      00667         MOVF    _USTAT, W
0006 A4D8      00668         BTFSS   STATUS, 2
0008 D000      00669         BRA     _00540_DS_
               00670 ;       .line   892; usb.c      byte PID = (ep0Bo.Stat & 0x3C) >> 2; // Pull PID from middle of BD0STAT
000A 0E3C      00671         MOVLW   0x3c
000C 0000      00672         BANKSEL _ep0Bo
000E 1500      00673         ANDWF   _ep0Bo, W, B
0010 6E00      00674         MOVWF   r0x00
0012 90D8      00675         BCF     STATUS, 0
0014 3000      00676         RRCF    r0x00, W
0016 6E00      00677         MOVWF   r0x00
0018 90D8      00678         BCF     STATUS, 0
001A 3200      00679         RRCF    r0x00, F
               00680 ;       .line   893; usb.c      if (PID == 0x0D)
001C 5000      00681         MOVF    r0x00, W
001E 0A0D      00682         XORLW   0x0d
0020 E100      00683         BNZ     _00524_DS_
               00684 ;       .line   895; usb.c      SetupStage();
0022 EC00 F000 00685         CALL    _SetupStage
0026 D000      00686         BRA     _00542_DS_
0028           00687 _00524_DS_:
0028 0000      00688         BANKSEL _ctrlTransferStage
               00689 ;       .line   896; usb.c      else if (ctrlTransferStage == DATA_OUT_STAGE)
002A 5100      00690         MOVF    _ctrlTransferStage, W, B
002C 0A01      00691         XORLW   0x01
002E E100      00692         BNZ     _00521_DS_
               00693 ;       .line   900; usb.c      OutDataStage();
0030 EC00 F000 00694         CALL    _OutDataStage
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0034 0000      00695         BANKSEL _HIDPostProcess
               00696 ;       .line   904; usb.c      if (HIDPostProcess)
0036 5100      00697         MOVF    _HIDPostProcess, W, B
0038 E000      00698         BZ      _00516_DS_
               00699 ;       .line   907; usb.c      byte reportID = SetupPacket.wValue0;
003A C000 F000 00700         MOVFF   (_SetupPacket + 2), r0x00
003E 0000      00701         BANKSEL (_SetupPacket + 3)
               00702 ;       .line   911; usb.c      if (SetupPacket.wValue1 == 0x02)
0040 5100      00703         MOVF    (_SetupPacket + 3), W, B
0042 0A02      00704         XORLW   0x02
0044 E100      00705         BNZ     _00513_DS_
               00706 ;       .line   914; usb.c      SetOutputReport(reportID);
0046 5000      00707         MOVF    r0x00, W
0048 6EE5      00708         MOVWF   POSTDEC1
004A EC00 F000 00709         CALL    _SetOutputReport
004E 2AE1      00710         INCF    FSR1L, F
0050 D000      00711         BRA     _00516_DS_
0052           00712 _00513_DS_:
0052 0000      00713         BANKSEL (_SetupPacket + 3)
               00714 ;       .line   916; usb.c      else if (SetupPacket.wValue1 == 0x03)
0054 5100      00715         MOVF    (_SetupPacket + 3), W, B
0056 0A03      00716         XORLW   0x03
0058 E100      00717         BNZ     _00516_DS_
               00718 ;       .line   919; usb.c      SetFeatureReport(reportID);
005A 5000      00719         MOVF    r0x00, W
005C 6EE5      00720         MOVWF   POSTDEC1
005E EC00 F000 00721         CALL    _SetFeatureReport
0062 2AE1      00722         INCF    FSR1L, F
0064           00723 _00516_DS_:
0064 0000      00724         BANKSEL _ep0Bo
               00725 ;       .line   928; usb.c      if(ep0Bo.Stat & DTS)
0066 AD00      00726         BTFSS   _ep0Bo, 6, B
0068 D000      00727         BRA     _00518_DS_
               00728 ;       .line   929; usb.c      ep0Bo.Stat = UOWN | DTSEN;
006A 0E88      00729         MOVLW   0x88
               00730 ; removed redundant BANKSEL
006C 6F00      00731         MOVWF   _ep0Bo, B
006E D000      00732         BRA     _00542_DS_
0070           00733 _00518_DS_:
               00734 ;       .line   931; usb.c      ep0Bo.Stat = UOWN | DTS | DTSEN;
0070 0EC8      00735         MOVLW   0xc8
0072 0000      00736         BANKSEL _ep0Bo
0074 6F00      00737         MOVWF   _ep0Bo, B
0076 D000      00738         BRA     _00542_DS_
0078           00739 _00521_DS_:
               00740 ;       .line   936; usb.c      WaitForSetupStage();
0078 EC00 F000 00741         CALL    _WaitForSetupStage
007C D000      00742         BRA     _00542_DS_
007E           00743 _00540_DS_:
               00744 ;       .line   939; usb.c      else if(USTAT == 0x04)
007E 5000      00745         MOVF    _USTAT, W
0080 0A04      00746         XORLW   0x04
0082 E100      00747         BNZ     _00542_DS_
               00748 ;       .line   942; usb.c      if ((UADDR == 0) && (deviceState == ADDRESS))
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0084 5000      00749         MOVF    _UADDR, W
0086 E100      00750         BNZ     _00529_DS_
0088 0000      00751         BANKSEL _deviceState
008A 5100      00752         MOVF    _deviceState, W, B
008C 0A04      00753         XORLW   0x04
008E E100      00754         BNZ     _00529_DS_
               00755 ;       .line   946; usb.c      UADDR = SetupPacket.wValue0;
0090 C000 F000 00756         MOVFF   (_SetupPacket + 2), _UADDR
               00757 ;       .line   950; usb.c      if(UADDR == 0)
0094 5000      00758         MOVF    _UADDR, W
0096 E100      00759         BNZ     _00529_DS_
               00760 ;       .line   953; usb.c      deviceState = DEFAULT;
0098 0E03      00761         MOVLW   0x03
009A 0000      00762         BANKSEL _deviceState
009C 6F00      00763         MOVWF   _deviceState, B
009E           00764 _00529_DS_:
009E 0000      00765         BANKSEL _ctrlTransferStage
               00766 ;       .line   956; usb.c      if (ctrlTransferStage == DATA_IN_STAGE)
00A0 5100      00767         MOVF    _ctrlTransferStage, W, B
00A2 0A02      00768         XORLW   0x02
00A4 E100      00769         BNZ     _00535_DS_
               00770 ;       .line   959; usb.c      InDataStage();
00A6 EC00 F000 00771         CALL    _InDataStage
00AA 0000      00772         BANKSEL _ep0Bi
               00773 ;       .line   962; usb.c      if(ep0Bi.Stat & DTS)
00AC AD00      00774         BTFSS   _ep0Bi, 6, B
00AE D000      00775         BRA     _00532_DS_
               00776 ;       .line   963; usb.c      ep0Bi.Stat = UOWN | DTSEN;
00B0 0E88      00777         MOVLW   0x88
               00778 ; removed redundant BANKSEL
00B2 6F00      00779         MOVWF   _ep0Bi, B
00B4 D000      00780         BRA     _00542_DS_
00B6           00781 _00532_DS_:
               00782 ;       .line   965; usb.c      ep0Bi.Stat = UOWN | DTS | DTSEN;
00B6 0EC8      00783         MOVLW   0xc8
00B8 0000      00784         BANKSEL _ep0Bi
00BA 6F00      00785         MOVWF   _ep0Bi, B
00BC D000      00786         BRA     _00542_DS_
00BE           00787 _00535_DS_:
               00788 ;       .line   970; usb.c      WaitForSetupStage();
00BE EC00 F000 00789         CALL    _WaitForSetupStage
00C2           00790 _00542_DS_:
00C2 CFE4 F000 00791         MOVFF   PREINC1, r0x00
00C6 0012      00792         RETURN  
               00793 
               00794 ; ; Starting pCode block
               00795 S_usb__WaitForSetupStage        code
0000           00796 _WaitForSetupStage:
               00797 ;       .line   871; usb.c      void WaitForSetupStage(void)
0000 C000 FFE5 00798         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 00799         MOVFF   r0x01, POSTDEC1
0008 0000      00800         BANKSEL _ctrlTransferStage
               00801 ;       .line   873; usb.c      ctrlTransferStage = SETUP_STAGE;
000A 6B00      00802         CLRF    _ctrlTransferStage, B
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00803 ;       .line   874; usb.c      ep0Bo.Cnt = E0SZ;
000C 0E20      00804         MOVLW   0x20
000E 0000      00805         BANKSEL (_ep0Bo + 1)
0010 6F00      00806         MOVWF   (_ep0Bo + 1), B
               00807 ;       .line   875; usb.c      ep0Bo.ADDR = PTR16(&SetupPacket);
0012 0E00      00808         MOVLW   LOW(_SetupPacket)
0014 6E00      00809         MOVWF   r0x00
0016 0E00      00810         MOVLW   HIGH(_SetupPacket)
0018 6E00      00811         MOVWF   r0x01
001A 5000      00812         MOVF    r0x00, W
               00813 ; removed redundant BANKSEL
001C 6F00      00814         MOVWF   (_ep0Bo + 2), B
001E 5000      00815         MOVF    r0x01, W
               00816 ; removed redundant BANKSEL
0020 6F00      00817         MOVWF   (_ep0Bo + 3), B
               00818 ;       .line   876; usb.c      ep0Bo.Stat = UOWN | DTSEN; // Give to SIE, enable data toggle checks
0022 0E88      00819         MOVLW   0x88
0024 0000      00820         BANKSEL _ep0Bo
0026 6F00      00821         MOVWF   _ep0Bo, B
               00822 ; removed redundant BANKSEL
               00823 ;       .line   877; usb.c      ep0Bi.Stat = 0x00;         // Give control to CPU
0028 6B00      00824         CLRF    _ep0Bi, B
002A CFE4 F000 00825         MOVFF   PREINC1, r0x01
002E CFE4 F000 00826         MOVFF   PREINC1, r0x00
0032 0012      00827         RETURN  
               00828 
               00829 ; ; Starting pCode block
               00830 S_usb__SetupStage       code
0000           00831 _SetupStage:
               00832 ;       .line   803; usb.c      void SetupStage(void)
0000 C000 FFE5 00833         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 00834         MOVFF   r0x01, POSTDEC1
               00835 ;       .line   807; usb.c      ep0Bi.Stat &= ~UOWN;
0008 0E7F      00836         MOVLW   0x7f
000A 0000      00837         BANKSEL _ep0Bi
000C 1500      00838         ANDWF   _ep0Bi, W, B
               00839 ; #     MOVWF   r0x00
               00840 ; #     MOVF    r0x00, W
               00841 ; ;     peep 2 - Removed redundant move
000E 6F00      00842         MOVWF   _ep0Bi, B
               00843 ;       .line   808; usb.c      ep0Bo.Stat &= ~UOWN;
0010 0E7F      00844         MOVLW   0x7f
               00845 ; removed redundant BANKSEL
0012 1500      00846         ANDWF   _ep0Bo, W, B
               00847 ; #     MOVWF   r0x00
               00848 ; #     MOVF    r0x00, W
               00849 ; ;     peep 2 - Removed redundant move
0014 6F00      00850         MOVWF   _ep0Bo, B
0016 0000      00851         BANKSEL _ctrlTransferStage
               00852 ;       .line   811; usb.c      ctrlTransferStage = SETUP_STAGE;
0018 6B00      00853         CLRF    _ctrlTransferStage, B
001A 0000      00854         BANKSEL _requestHandled
               00855 ;       .line   812; usb.c      requestHandled = 0; // Default is that request hasn't been handled
001C 6B00      00856         CLRF    _requestHandled, B
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001E 0000      00857         BANKSEL _HIDPostProcess
               00858 ;       .line   813; usb.c      HIDPostProcess = 0; // Assume standard request until know otherwise
0020 6B00      00859         CLRF    _HIDPostProcess, B
0022 0000      00860         BANKSEL _wCount
               00861 ;       .line   814; usb.c      wCount = 0;         // No bytes transferred
0024 6B00      00862         CLRF    _wCount, B
               00863 ; removed redundant BANKSEL
0026 6B00      00864         CLRF    (_wCount + 1), B
               00865 ;       .line   817; usb.c      ProcessStandardRequest();
0028 EC00 F000 00866         CALL    _ProcessStandardRequest
               00867 ;       .line   820; usb.c      ProcessHIDRequest();
002C EC00 F000 00868         CALL    _ProcessHIDRequest
0030 0000      00869         BANKSEL _requestHandled
               00870 ;       .line   824; usb.c      if (!requestHandled)
0032 5100      00871         MOVF    _requestHandled, W, B
0034 E100      00872         BNZ     _00491_DS_
               00873 ;       .line   827; usb.c      ep0Bo.Cnt = E0SZ;
0036 0E20      00874         MOVLW   0x20
0038 0000      00875         BANKSEL (_ep0Bo + 1)
003A 6F00      00876         MOVWF   (_ep0Bo + 1), B
               00877 ;       .line   828; usb.c      ep0Bo.ADDR = PTR16(&SetupPacket);
003C 0E00      00878         MOVLW   LOW(_SetupPacket)
003E 6E00      00879         MOVWF   r0x00
0040 0E00      00880         MOVLW   HIGH(_SetupPacket)
0042 6E00      00881         MOVWF   r0x01
0044 5000      00882         MOVF    r0x00, W
               00883 ; removed redundant BANKSEL
0046 6F00      00884         MOVWF   (_ep0Bo + 2), B
0048 5000      00885         MOVF    r0x01, W
               00886 ; removed redundant BANKSEL
004A 6F00      00887         MOVWF   (_ep0Bo + 3), B
               00888 ; #     MOVLW   0x84
               00889 ; #     MOVWF   _ep0Bo, B
               00890 ; #     MOVLW   0x84
               00891 ; ;     peep 5 - Removed redundant move
               00892 ;       .line   829; usb.c      ep0Bo.Stat = UOWN | BSTALL;
004C 0E84      00893         MOVLW   0x84
004E 0000      00894         BANKSEL _ep0Bo
               00895 ;       .line   830; usb.c      ep0Bi.Stat = UOWN | BSTALL;
0050 6F00      00896         MOVWF   _ep0Bo, B
               00897 ; removed redundant BANKSEL
0052 6F00      00898         MOVWF   _ep0Bi, B
0054 D000      00899         BRA     _00492_DS_
0056           00900 _00491_DS_:
0056 0000      00901         BANKSEL _SetupPacket
               00902 ;       .line   832; usb.c      else if (SetupPacket.bmRequestType & 0x80)
0058 AF00      00903         BTFSS   _SetupPacket, 7, B
005A D000      00904         BRA     _00488_DS_
005C 0000      00905         BANKSEL (_wCount + 1)
               00906 ;       .line   835; usb.c      if(SetupPacket.wLength < wCount)
005E 5100      00907         MOVF    (_wCount + 1), W, B
0060 0000      00908         BANKSEL (_SetupPacket + 7)
0062 5D00      00909         SUBWF   (_SetupPacket + 7), W, B
0064 E100      00910         BNZ     _00501_DS_
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0066 0000      00911         BANKSEL _wCount
0068 5100      00912         MOVF    _wCount, W, B
006A 0000      00913         BANKSEL (_SetupPacket + 6)
006C 5D00      00914         SUBWF   (_SetupPacket + 6), W, B
006E           00915 _00501_DS_:
006E E200      00916         BC      _00486_DS_
               00917 ;       .line   836; usb.c      wCount = SetupPacket.wLength;
0070 C000 F000 00918         MOVFF   (_SetupPacket + 6), _wCount
0074 C000 F000 00919         MOVFF   (_SetupPacket + 7), (_wCount + 1)
0078           00920 _00486_DS_:
               00921 ;       .line   837; usb.c      InDataStage();
0078 EC00 F000 00922         CALL    _InDataStage
               00923 ;       .line   838; usb.c      ctrlTransferStage = DATA_IN_STAGE;
007C 0E02      00924         MOVLW   0x02
007E 0000      00925         BANKSEL _ctrlTransferStage
0080 6F00      00926         MOVWF   _ctrlTransferStage, B
               00927 ;       .line   840; usb.c      ep0Bo.Cnt = E0SZ;
0082 0E20      00928         MOVLW   0x20
0084 0000      00929         BANKSEL (_ep0Bo + 1)
0086 6F00      00930         MOVWF   (_ep0Bo + 1), B
               00931 ;       .line   841; usb.c      ep0Bo.ADDR = PTR16(&SetupPacket);
0088 0E00      00932         MOVLW   LOW(_SetupPacket)
008A 6E00      00933         MOVWF   r0x00
008C 0E00      00934         MOVLW   HIGH(_SetupPacket)
008E 6E00      00935         MOVWF   r0x01
0090 5000      00936         MOVF    r0x00, W
               00937 ; removed redundant BANKSEL
0092 6F00      00938         MOVWF   (_ep0Bo + 2), B
0094 5000      00939         MOVF    r0x01, W
               00940 ; removed redundant BANKSEL
0096 6F00      00941         MOVWF   (_ep0Bo + 3), B
               00942 ;       .line   842; usb.c      ep0Bo.Stat = UOWN;
0098 0E80      00943         MOVLW   0x80
009A 0000      00944         BANKSEL _ep0Bo
009C 6F00      00945         MOVWF   _ep0Bo, B
               00946 ;       .line   845; usb.c      ep0Bi.ADDR = PTR16(&controlTransferBuffer);
009E 0E00      00947         MOVLW   LOW(_controlTransferBuffer)
00A0 6E00      00948         MOVWF   r0x00
00A2 0E00      00949         MOVLW   HIGH(_controlTransferBuffer)
00A4 6E00      00950         MOVWF   r0x01
00A6 5000      00951         MOVF    r0x00, W
00A8 0000      00952         BANKSEL (_ep0Bi + 2)
00AA 6F00      00953         MOVWF   (_ep0Bi + 2), B
00AC 5000      00954         MOVF    r0x01, W
               00955 ; removed redundant BANKSEL
00AE 6F00      00956         MOVWF   (_ep0Bi + 3), B
               00957 ;       .line   847; usb.c      ep0Bi.Stat = UOWN | DTS | DTSEN; 
00B0 0EC8      00958         MOVLW   0xc8
00B2 0000      00959         BANKSEL _ep0Bi
00B4 6F00      00960         MOVWF   _ep0Bi, B
00B6 D000      00961         BRA     _00492_DS_
00B8           00962 _00488_DS_:
               00963 ;       .line   852; usb.c      ctrlTransferStage = DATA_OUT_STAGE;
00B8 0E01      00964         MOVLW   0x01
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BA 0000      00965         BANKSEL _ctrlTransferStage
00BC 6F00      00966         MOVWF   _ctrlTransferStage, B
00BE 0000      00967         BANKSEL (_ep0Bi + 1)
               00968 ;       .line   855; usb.c      ep0Bi.Cnt = 0;
00C0 6B00      00969         CLRF    (_ep0Bi + 1), B
               00970 ;       .line   856; usb.c      ep0Bi.Stat = UOWN | DTS | DTSEN;
00C2 0EC8      00971         MOVLW   0xc8
00C4 0000      00972         BANKSEL _ep0Bi
00C6 6F00      00973         MOVWF   _ep0Bi, B
               00974 ;       .line   859; usb.c      ep0Bo.Cnt = E0SZ;
00C8 0E20      00975         MOVLW   0x20
00CA 0000      00976         BANKSEL (_ep0Bo + 1)
00CC 6F00      00977         MOVWF   (_ep0Bo + 1), B
               00978 ;       .line   860; usb.c      ep0Bo.ADDR = PTR16(&controlTransferBuffer);
00CE 0E00      00979         MOVLW   LOW(_controlTransferBuffer)
00D0 6E00      00980         MOVWF   r0x00
00D2 0E00      00981         MOVLW   HIGH(_controlTransferBuffer)
00D4 6E00      00982         MOVWF   r0x01
00D6 5000      00983         MOVF    r0x00, W
               00984 ; removed redundant BANKSEL
00D8 6F00      00985         MOVWF   (_ep0Bo + 2), B
00DA 5000      00986         MOVF    r0x01, W
               00987 ; removed redundant BANKSEL
00DC 6F00      00988         MOVWF   (_ep0Bo + 3), B
               00989 ;       .line   862; usb.c      ep0Bo.Stat = UOWN | DTS | DTSEN;
00DE 0EC8      00990         MOVLW   0xc8
00E0 0000      00991         BANKSEL _ep0Bo
00E2 6F00      00992         MOVWF   _ep0Bo, B
00E4           00993 _00492_DS_:
               00994 ;       .line   866; usb.c      UCONbits.PKTDIS = 0;
00E4 9800      00995         BCF     _UCONbits, 4
00E6 CFE4 F000 00996         MOVFF   PREINC1, r0x01
00EA CFE4 F000 00997         MOVFF   PREINC1, r0x00
00EE 0012      00998         RETURN  
               00999 
               01000 ; ; Starting pCode block
               01001 S_usb__OutDataStage     code
0000           01002 _OutDataStage:
               01003 ;       .line   770; usb.c      void OutDataStage(void)
0000 C000 FFE5 01004         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 01005         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 01006         MOVFF   r0x02, POSTDEC1
000C C000 FFE5 01007         MOVFF   r0x03, POSTDEC1
0010 C000 FFE5 01008         MOVFF   r0x04, POSTDEC1
0014 C000 FFE5 01009         MOVFF   r0x05, POSTDEC1
0018 C000 FFE5 01010         MOVFF   r0x06, POSTDEC1
001C C000 FFE5 01011         MOVFF   r0x07, POSTDEC1
0020 C000 FFE5 01012         MOVFF   r0x08, POSTDEC1
0024 C000 FFE5 01013         MOVFF   r0x09, POSTDEC1
               01014 ;       .line   774; usb.c      bufferSize = ((0x03 & ep0Bo.Stat) << 8) | ep0Bo.Cnt;
0028 0E03      01015         MOVLW   0x03
002A 0000      01016         BANKSEL _ep0Bo
002C 1500      01017         ANDWF   _ep0Bo, W, B
002E 6A00      01018         CLRF    r0x01
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0030 6E00      01019         MOVWF   r0x03
0032 6A00      01020         CLRF    r0x02
0034 C000 F000 01021         MOVFF   (_ep0Bo + 1), r0x00
0038 5000      01022         MOVF    r0x02, W
003A 1200      01023         IORWF   r0x00, F
003C 5000      01024         MOVF    r0x03, W
003E 1200      01025         IORWF   r0x01, F
               01026 ;       .line   781; usb.c      wCount = wCount + bufferSize;
0040 5000      01027         MOVF    r0x00, W
0042 0000      01028         BANKSEL _wCount
0044 2700      01029         ADDWF   _wCount, F, B
0046 5000      01030         MOVF    r0x01, W
               01031 ; removed redundant BANKSEL
0048 2300      01032         ADDWFC  (_wCount + 1), F, B
               01033 ;       .line   783; usb.c      outPtr = (byte*)&controlTransferBuffer;
004A 0E00      01034         MOVLW   HIGH(_controlTransferBuffer)
004C 0000      01035         BANKSEL (_outPtr + 1)
004E 6F00      01036         MOVWF   (_outPtr + 1), B
0050 0E00      01037         MOVLW   LOW(_controlTransferBuffer)
               01038 ; removed redundant BANKSEL
0052 6F00      01039         MOVWF   _outPtr, B
0054 0E80      01040         MOVLW   0x80
               01041 ; removed redundant BANKSEL
0056 6F00      01042         MOVWF   (_outPtr + 2), B
               01043 ;       .line   787; usb.c      for (i=0;i<bufferSize;i++)
0058 6A00      01044         CLRF    r0x03
005A           01045 _00470_DS_:
005A 5000      01046         MOVF    r0x01, W
005C 5C00      01047         SUBWF   r0x03, W
005E E100      01048         BNZ     _00480_DS_
0060 5000      01049         MOVF    r0x00, W
0062 5C00      01050         SUBWF   r0x02, W
0064           01051 _00480_DS_:
0064 E200      01052         BC      _00474_DS_
               01053 ;       .line   792; usb.c      *inPtr++ = *outPtr++;
0066 C000 F000 01054         MOVFF   _inPtr, r0x04
006A C000 F000 01055         MOVFF   (_inPtr + 1), r0x05
006E C000 F000 01056         MOVFF   (_inPtr + 2), r0x06
0072 C000 F000 01057         MOVFF   _outPtr, r0x07
0076 C000 F000 01058         MOVFF   (_outPtr + 1), r0x08
007A C000 F000 01059         MOVFF   (_outPtr + 2), r0x09
007E C000 FFE9 01060         MOVFF   r0x07, FSR0L
0082 C000 FFF3 01061         MOVFF   r0x08, PRODL
0086 5000      01062         MOVF    r0x09, W
0088 EC00 F000 01063         CALL    __gptrget1
008C 6E00      01064         MOVWF   r0x07
008E 0000      01065         BANKSEL _outPtr
0090 2B00      01066         INCF    _outPtr, F, B
0092 E300      01067         BNC     _10628_DS_
               01068 ; removed redundant BANKSEL
0094 2B00      01069         INCF    (_outPtr + 1), F, B
0096           01070 _10628_DS_:
0096 E300      01071         BNC     _20629_DS_
0098 0000      01072         BANKSEL (_outPtr + 2)
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009A 2B00      01073         INCF    (_outPtr + 2), F, B
009C           01074 _20629_DS_:
009C C000 FFE5 01075         MOVFF   r0x07, POSTDEC1
00A0 C000 FFE9 01076         MOVFF   r0x04, FSR0L
00A4 C000 FFF3 01077         MOVFF   r0x05, PRODL
00A8 5000      01078         MOVF    r0x06, W
00AA EC00 F000 01079         CALL    __gptrput1
00AE 0000      01080         BANKSEL _inPtr
00B0 2B00      01081         INCF    _inPtr, F, B
00B2 E300      01082         BNC     _30630_DS_
               01083 ; removed redundant BANKSEL
00B4 2B00      01084         INCF    (_inPtr + 1), F, B
00B6           01085 _30630_DS_:
00B6 E300      01086         BNC     _40631_DS_
00B8 0000      01087         BANKSEL (_inPtr + 2)
00BA 2B00      01088         INCF    (_inPtr + 2), F, B
00BC           01089 _40631_DS_:
               01090 ;       .line   787; usb.c      for (i=0;i<bufferSize;i++)
00BC 2A00      01091         INCF    r0x02, F
00BE B0D8      01092         BTFSC   STATUS, 0
00C0 2A00      01093         INCF    r0x03, F
00C2 D000      01094         BRA     _00470_DS_
00C4           01095 _00474_DS_:
00C4 CFE4 F000 01096         MOVFF   PREINC1, r0x09
00C8 CFE4 F000 01097         MOVFF   PREINC1, r0x08
00CC CFE4 F000 01098         MOVFF   PREINC1, r0x07
00D0 CFE4 F000 01099         MOVFF   PREINC1, r0x06
00D4 CFE4 F000 01100         MOVFF   PREINC1, r0x05
00D8 CFE4 F000 01101         MOVFF   PREINC1, r0x04
00DC CFE4 F000 01102         MOVFF   PREINC1, r0x03
00E0 CFE4 F000 01103         MOVFF   PREINC1, r0x02
00E4 CFE4 F000 01104         MOVFF   PREINC1, r0x01
00E8 CFE4 F000 01105         MOVFF   PREINC1, r0x00
00EC 0012      01106         RETURN  
               01107 
               01108 ; ; Starting pCode block
               01109 S_usb__InDataStage      code
0000           01110 _InDataStage:
               01111 ;       .line   725; usb.c      void InDataStage(void)
0000 C000 FFE5 01112         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 01113         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 01114         MOVFF   r0x02, POSTDEC1
000C C000 FFE5 01115         MOVFF   r0x03, POSTDEC1
0010 C000 FFE5 01116         MOVFF   r0x04, POSTDEC1
0014 C000 FFE5 01117         MOVFF   r0x05, POSTDEC1
0018 C000 FFE5 01118         MOVFF   r0x06, POSTDEC1
001C C000 FFE5 01119         MOVFF   r0x07, POSTDEC1
0020 C000 FFE5 01120         MOVFF   r0x08, POSTDEC1
               01121 ;       .line   733; usb.c      if(wCount < E0SZ)
0024 0E00      01122         MOVLW   0x00
0026 0000      01123         BANKSEL (_wCount + 1)
0028 5D00      01124         SUBWF   (_wCount + 1), W, B
002A E100      01125         BNZ     _00460_DS_
002C 0E20      01126         MOVLW   0x20
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01127 ; removed redundant BANKSEL
002E 5D00      01128         SUBWF   _wCount, W, B
0030           01129 _00460_DS_:
0030 E200      01130         BC      _00448_DS_
               01131 ;       .line   734; usb.c      bufferSize = wCount;
0032 C000 F000 01132         MOVFF   _wCount, r0x00
0036 C000 F000 01133         MOVFF   (_wCount + 1), r0x01
003A D000      01134         BRA     _00449_DS_
003C           01135 _00448_DS_:
               01136 ;       .line   736; usb.c      bufferSize = E0SZ;
003C 0E20      01137         MOVLW   0x20
003E 6E00      01138         MOVWF   r0x00
0040 6A00      01139         CLRF    r0x01
0042           01140 _00449_DS_:
               01141 ;       .line   743; usb.c      ep0Bi.Stat &= ~(BC8 | BC9); // Clear BC8 and BC9
0042 0EFC      01142         MOVLW   0xfc
0044 0000      01143         BANKSEL _ep0Bi
0046 1500      01144         ANDWF   _ep0Bi, W, B
               01145 ; #     MOVWF   r0x02
               01146 ; #     MOVF    r0x02, W
               01147 ; ;     peep 2 - Removed redundant move
0048 6F00      01148         MOVWF   _ep0Bi, B
               01149 ;       .line   744; usb.c      ep0Bi.Stat |= (byte)((bufferSize & 0x0300) >> 8);
004A 0E03      01150         MOVLW   0x03
004C 1400      01151         ANDWF   r0x01, W
               01152 ; #     MOVWF   r0x03
               01153 ; #     MOVF    r0x03, W
               01154 ; ;     peep 2 - Removed redundant move
004E 6E00      01155         MOVWF   r0x02
               01156 ; removed redundant BANKSEL
0050 5100      01157         MOVF    _ep0Bi, W, B
0052 1200      01158         IORWF   r0x02, F
0054 5000      01159         MOVF    r0x02, W
               01160 ; removed redundant BANKSEL
0056 6F00      01161         MOVWF   _ep0Bi, B
               01162 ; #     MOVF    r0x00, W
               01163 ; #     MOVWF   r0x02
               01164 ; #     MOVF    r0x02, W
               01165 ; ;     peep 9c - Removed redundant move
               01166 ;       .line   745; usb.c      ep0Bi.Cnt = (byte)(bufferSize & 0xFF);
0058 5000      01167         MOVF    r0x00, W
005A 6E00      01168         MOVWF   r0x02
005C 0000      01169         BANKSEL (_ep0Bi + 1)
005E 6F00      01170         MOVWF   (_ep0Bi + 1), B
               01171 ;       .line   746; usb.c      ep0Bi.ADDR = PTR16(&controlTransferBuffer);
0060 0E00      01172         MOVLW   LOW(_controlTransferBuffer)
0062 6E00      01173         MOVWF   r0x02
0064 0E00      01174         MOVLW   HIGH(_controlTransferBuffer)
0066 6E00      01175         MOVWF   r0x03
0068 5000      01176         MOVF    r0x02, W
               01177 ; removed redundant BANKSEL
006A 6F00      01178         MOVWF   (_ep0Bi + 2), B
006C 5000      01179         MOVF    r0x03, W
               01180 ; removed redundant BANKSEL
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006E 6F00      01181         MOVWF   (_ep0Bi + 3), B
               01182 ;       .line   751; usb.c      wCount = wCount - bufferSize;
0070 5000      01183         MOVF    r0x00, W
0072 0000      01184         BANKSEL _wCount
0074 5F00      01185         SUBWF   _wCount, F, B
0076 5000      01186         MOVF    r0x01, W
               01187 ; removed redundant BANKSEL
0078 5B00      01188         SUBWFB  (_wCount + 1), F, B
               01189 ;       .line   754; usb.c      inPtr = (byte *)&controlTransferBuffer;
007A 0E00      01190         MOVLW   HIGH(_controlTransferBuffer)
007C 0000      01191         BANKSEL (_inPtr + 1)
007E 6F00      01192         MOVWF   (_inPtr + 1), B
0080 0E00      01193         MOVLW   LOW(_controlTransferBuffer)
               01194 ; removed redundant BANKSEL
0082 6F00      01195         MOVWF   _inPtr, B
0084 0E80      01196         MOVLW   0x80
               01197 ; removed redundant BANKSEL
0086 6F00      01198         MOVWF   (_inPtr + 2), B
               01199 ;       .line   759; usb.c      for (i=0;i<bufferSize;i++)
0088 6A00      01200         CLRF    r0x02
008A           01201 _00450_DS_:
008A C000 F000 01202         MOVFF   r0x02, r0x03
008E 6A00      01203         CLRF    r0x04
0090 5000      01204         MOVF    r0x01, W
0092 5C00      01205         SUBWF   r0x04, W
0094 E100      01206         BNZ     _00465_DS_
0096 5000      01207         MOVF    r0x00, W
0098 5C00      01208         SUBWF   r0x03, W
009A           01209 _00465_DS_:
009A E200      01210         BC      _00454_DS_
               01211 ;       .line   764; usb.c      *inPtr++ = *outPtr++;
009C C000 F000 01212         MOVFF   _inPtr, r0x03
00A0 C000 F000 01213         MOVFF   (_inPtr + 1), r0x04
00A4 C000 F000 01214         MOVFF   (_inPtr + 2), r0x05
00A8 C000 F000 01215         MOVFF   _outPtr, r0x06
00AC C000 F000 01216         MOVFF   (_outPtr + 1), r0x07
00B0 C000 F000 01217         MOVFF   (_outPtr + 2), r0x08
00B4 C000 FFE9 01218         MOVFF   r0x06, FSR0L
00B8 C000 FFF3 01219         MOVFF   r0x07, PRODL
00BC 5000      01220         MOVF    r0x08, W
00BE EC00 F000 01221         CALL    __gptrget1
00C2 6E00      01222         MOVWF   r0x06
00C4 0000      01223         BANKSEL _outPtr
00C6 2B00      01224         INCF    _outPtr, F, B
00C8 E300      01225         BNC     _50632_DS_
               01226 ; removed redundant BANKSEL
00CA 2B00      01227         INCF    (_outPtr + 1), F, B
00CC           01228 _50632_DS_:
00CC E300      01229         BNC     _60633_DS_
00CE 0000      01230         BANKSEL (_outPtr + 2)
00D0 2B00      01231         INCF    (_outPtr + 2), F, B
00D2           01232 _60633_DS_:
00D2 C000 FFE5 01233         MOVFF   r0x06, POSTDEC1
00D6 C000 FFE9 01234         MOVFF   r0x03, FSR0L
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DA C000 FFF3 01235         MOVFF   r0x04, PRODL
00DE 5000      01236         MOVF    r0x05, W
00E0 EC00 F000 01237         CALL    __gptrput1
00E4 0000      01238         BANKSEL _inPtr
00E6 2B00      01239         INCF    _inPtr, F, B
00E8 E300      01240         BNC     _70634_DS_
               01241 ; removed redundant BANKSEL
00EA 2B00      01242         INCF    (_inPtr + 1), F, B
00EC           01243 _70634_DS_:
00EC E300      01244         BNC     _80635_DS_
00EE 0000      01245         BANKSEL (_inPtr + 2)
00F0 2B00      01246         INCF    (_inPtr + 2), F, B
00F2           01247 _80635_DS_:
               01248 ;       .line   759; usb.c      for (i=0;i<bufferSize;i++)
00F2 2A00      01249         INCF    r0x02, F
00F4 D000      01250         BRA     _00450_DS_
00F6           01251 _00454_DS_:
00F6 CFE4 F000 01252         MOVFF   PREINC1, r0x08
00FA CFE4 F000 01253         MOVFF   PREINC1, r0x07
00FE CFE4 F000 01254         MOVFF   PREINC1, r0x06
0102 CFE4 F000 01255         MOVFF   PREINC1, r0x05
0106 CFE4 F000 01256         MOVFF   PREINC1, r0x04
010A CFE4 F000 01257         MOVFF   PREINC1, r0x03
010E CFE4 F000 01258         MOVFF   PREINC1, r0x02
0112 CFE4 F000 01259         MOVFF   PREINC1, r0x01
0116 CFE4 F000 01260         MOVFF   PREINC1, r0x00
011A 0012      01261         RETURN  
               01262 
               01263 ; ; Starting pCode block
               01264 S_usb__ProcessStandardRequest   code
0000           01265 _ProcessStandardRequest:
               01266 ;       .line   616; usb.c      void ProcessStandardRequest(void)
0000 C000 FFE5 01267         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 01268         MOVFF   r0x01, POSTDEC1
               01269 ;       .line   618; usb.c      byte request = SetupPacket.bRequest;
0008 C000 F000 01270         MOVFF   (_SetupPacket + 1), r0x00
               01271 ;       .line   620; usb.c      if((SetupPacket.bmRequestType & 0x60) != 0x00)
000C 0E60      01272         MOVLW   0x60
000E 0000      01273         BANKSEL _SetupPacket
0010 1500      01274         ANDWF   _SetupPacket, W, B
0012 6E00      01275         MOVWF   r0x01
0014 5000      01276         MOVF    r0x01, W
0016 E000      01277         BZ      _00379_DS_
               01278 ;       .line   623; usb.c      return;
0018 D000      01279         BRA     _00411_DS_
001A           01280 _00379_DS_:
               01281 ;       .line   625; usb.c      if (request == SET_ADDRESS)
001A 5000      01282         MOVF    r0x00, W
001C 0A05      01283         XORLW   0x05
001E E100      01284         BNZ     _00409_DS_
               01285 ;       .line   634; usb.c      requestHandled = 1;
0020 0E01      01286         MOVLW   0x01
0022 0000      01287         BANKSEL _requestHandled
0024 6F00      01288         MOVWF   _requestHandled, B
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01289 ;       .line   635; usb.c      deviceState = ADDRESS;
0026 0E04      01290         MOVLW   0x04
0028 0000      01291         BANKSEL _deviceState
002A 6F00      01292         MOVWF   _deviceState, B
               01293 ;       .line   636; usb.c      deviceAddress = SetupPacket.wValue0;
002C C000 F000 01294         MOVFF   (_SetupPacket + 2), _deviceAddress
0030 D000      01295         BRA     _00411_DS_
0032           01296 _00409_DS_:
               01297 ;       .line   638; usb.c      else if (request == GET_DESCRIPTOR)
0032 5000      01298         MOVF    r0x00, W
0034 0A06      01299         XORLW   0x06
0036 E100      01300         BNZ     _00406_DS_
               01301 ;       .line   640; usb.c      GetDescriptor();
0038 EC00 F000 01302         CALL    _GetDescriptor
003C D000      01303         BRA     _00411_DS_
003E           01304 _00406_DS_:
               01305 ;       .line   642; usb.c      else if (request == SET_CONFIGURATION)
003E 5000      01306         MOVF    r0x00, W
0040 0A09      01307         XORLW   0x09
0042 E100      01308         BNZ     _00403_DS_
               01309 ;       .line   647; usb.c      requestHandled = 1;
0044 0E01      01310         MOVLW   0x01
0046 0000      01311         BANKSEL _requestHandled
0048 6F00      01312         MOVWF   _requestHandled, B
               01313 ;       .line   648; usb.c      currentConfiguration = SetupPacket.wValue0;
004A C000 F000 01314         MOVFF   (_SetupPacket + 2), _currentConfiguration
004E 0000      01315         BANKSEL _currentConfiguration
               01316 ;       .line   651; usb.c      if (currentConfiguration == 0)
0050 5100      01317         MOVF    _currentConfiguration, W, B
0052 E100      01318         BNZ     _00381_DS_
               01319 ;       .line   654; usb.c      deviceState = ADDRESS;
0054 0E04      01320         MOVLW   0x04
0056 0000      01321         BANKSEL _deviceState
0058 6F00      01322         MOVWF   _deviceState, B
005A D000      01323         BRA     _00411_DS_
005C           01324 _00381_DS_:
               01325 ;       .line   658; usb.c      deviceState = CONFIGURED;
005C 0E05      01326         MOVLW   0x05
005E 0000      01327         BANKSEL _deviceState
0060 6F00      01328         MOVWF   _deviceState, B
               01329 ;       .line   661; usb.c      HIDInitEndpoint();
0062 EC00 F000 01330         CALL    _HIDInitEndpoint
0066 D000      01331         BRA     _00411_DS_
0068           01332 _00403_DS_:
               01333 ;       .line   667; usb.c      else if (request == GET_CONFIGURATION)
0068 5000      01334         MOVF    r0x00, W
006A 0A08      01335         XORLW   0x08
006C E100      01336         BNZ     _00400_DS_
               01337 ;       .line   672; usb.c      requestHandled = 1;
006E 0E01      01338         MOVLW   0x01
0070 0000      01339         BANKSEL _requestHandled
0072 6F00      01340         MOVWF   _requestHandled, B
               01341 ;       .line   673; usb.c      outPtr = (byte*)&currentConfiguration;
0074 0E00      01342         MOVLW   HIGH(_currentConfiguration)
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0076 0000      01343         BANKSEL (_outPtr + 1)
0078 6F00      01344         MOVWF   (_outPtr + 1), B
007A 0E00      01345         MOVLW   LOW(_currentConfiguration)
               01346 ; removed redundant BANKSEL
007C 6F00      01347         MOVWF   _outPtr, B
007E 0E80      01348         MOVLW   0x80
               01349 ; removed redundant BANKSEL
0080 6F00      01350         MOVWF   (_outPtr + 2), B
               01351 ;       .line   674; usb.c      wCount = 1;
0082 0E01      01352         MOVLW   0x01
0084 0000      01353         BANKSEL _wCount
0086 6F00      01354         MOVWF   _wCount, B
               01355 ; removed redundant BANKSEL
0088 6B00      01356         CLRF    (_wCount + 1), B
008A D000      01357         BRA     _00411_DS_
008C           01358 _00400_DS_:
               01359 ;       .line   676; usb.c      else if (request == GET_STATUS)
008C 5000      01360         MOVF    r0x00, W
008E E100      01361         BNZ     _00397_DS_
               01362 ;       .line   678; usb.c      GetStatus();
0090 EC00 F000 01363         CALL    _GetStatus
0094 D000      01364         BRA     _00411_DS_
0096           01365 _00397_DS_:
               01366 ;       .line   680; usb.c      else if ((request == CLEAR_FEATURE) ||
0096 5000      01367         MOVF    r0x00, W
0098 0A01      01368         XORLW   0x01
009A E000      01369         BZ      _00392_DS_
               01370 ;       .line   681; usb.c      (request == SET_FEATURE))
009C 5000      01371         MOVF    r0x00, W
009E 0A03      01372         XORLW   0x03
00A0 E100      01373         BNZ     _00393_DS_
00A2           01374 _00392_DS_:
               01375 ;       .line   683; usb.c      SetFeature();
00A2 EC00 F000 01376         CALL    _SetFeature
00A6 D000      01377         BRA     _00411_DS_
00A8           01378 _00393_DS_:
               01379 ;       .line   685; usb.c      else if (request == GET_INTERFACE)
00A8 5000      01380         MOVF    r0x00, W
00AA 0A0A      01381         XORLW   0x0a
00AC E100      01382         BNZ     _00390_DS_
               01383 ;       .line   692; usb.c      requestHandled = 1;
00AE 0E01      01384         MOVLW   0x01
00B0 0000      01385         BANKSEL _requestHandled
00B2 6F00      01386         MOVWF   _requestHandled, B
00B4 0000      01387         BANKSEL _controlTransferBuffer
               01388 ;       .line   693; usb.c      controlTransferBuffer[0] = 0;
00B6 6B00      01389         CLRF    _controlTransferBuffer, B
               01390 ;       .line   694; usb.c      outPtr = &controlTransferBuffer;
00B8 0E00      01391         MOVLW   HIGH(_controlTransferBuffer)
00BA 0000      01392         BANKSEL (_outPtr + 1)
00BC 6F00      01393         MOVWF   (_outPtr + 1), B
00BE 0E00      01394         MOVLW   LOW(_controlTransferBuffer)
               01395 ; removed redundant BANKSEL
00C0 6F00      01396         MOVWF   _outPtr, B
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C2 0E80      01397         MOVLW   0x80
               01398 ; removed redundant BANKSEL
00C4 6F00      01399         MOVWF   (_outPtr + 2), B
               01400 ;       .line   695; usb.c      wCount = 1;
00C6 0E01      01401         MOVLW   0x01
00C8 0000      01402         BANKSEL _wCount
00CA 6F00      01403         MOVWF   _wCount, B
               01404 ; removed redundant BANKSEL
00CC 6B00      01405         CLRF    (_wCount + 1), B
00CE D000      01406         BRA     _00411_DS_
00D0           01407 _00390_DS_:
               01408 ;       .line   697; usb.c      else if (request == SET_INTERFACE)
00D0 5000      01409         MOVF    r0x00, W
00D2 0A0B      01410         XORLW   0x0b
00D4 E100      01411         BNZ     _00411_DS_
               01412 ;       .line   703; usb.c      requestHandled = 1;
00D6 0E01      01413         MOVLW   0x01
00D8 0000      01414         BANKSEL _requestHandled
00DA 6F00      01415         MOVWF   _requestHandled, B
00DC           01416 _00411_DS_:
               01417 ;       .line   711; usb.c      else if (request == SYNCH_FRAME)
00DC CFE4 F000 01418         MOVFF   PREINC1, r0x01
00E0 CFE4 F000 01419         MOVFF   PREINC1, r0x00
00E4 0012      01420         RETURN  
               01421 
               01422 ; ; Starting pCode block
               01423 S_usb__SetFeature       code
0000           01424 _SetFeature:
               01425 ;       .line   567; usb.c      static void SetFeature(void)
0000 C000 FFE5 01426         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 01427         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 01428         MOVFF   r0x02, POSTDEC1
000C C000 FFE5 01429         MOVFF   r0x03, POSTDEC1
               01430 ;       .line   569; usb.c      byte recipient = SetupPacket.bmRequestType & 0x1F;
0010 0E1F      01431         MOVLW   0x1f
0012 0000      01432         BANKSEL _SetupPacket
0014 1500      01433         ANDWF   _SetupPacket, W, B
0016 6E00      01434         MOVWF   r0x00
               01435 ;       .line   570; usb.c      byte feature = SetupPacket.wValue0;
0018 C000 F000 01436         MOVFF   (_SetupPacket + 2), r0x01
               01437 ;       .line   575; usb.c      if (recipient == 0x00)
001C 5000      01438         MOVF    r0x00, W
001E E100      01439         BNZ     _00346_DS_
               01440 ;       .line   578; usb.c      if (feature == DEVICE_REMOTE_WAKEUP)
0020 5000      01441         MOVF    r0x01, W
0022 0A01      01442         XORLW   0x01
0024 E000      01443         BZ      _00361_DS_
0026 D000      01444         BRA     _00348_DS_
0028           01445 _00361_DS_:
               01446 ;       .line   580; usb.c      requestHandled = 1;
0028 0E01      01447         MOVLW   0x01
002A 0000      01448         BANKSEL _requestHandled
002C 6F00      01449         MOVWF   _requestHandled, B
002E 0000      01450         BANKSEL (_SetupPacket + 1)
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01451 ;       .line   581; usb.c      if (SetupPacket.bRequest == SET_FEATURE)
0030 5100      01452         MOVF    (_SetupPacket + 1), W, B
0032 0A03      01453         XORLW   0x03
0034 E100      01454         BNZ     _00328_DS_
               01455 ;       .line   582; usb.c      remoteWakeup = 1;
0036 0E01      01456         MOVLW   0x01
0038 0000      01457         BANKSEL _remoteWakeup
003A 6F00      01458         MOVWF   _remoteWakeup, B
003C D000      01459         BRA     _00348_DS_
003E           01460 _00328_DS_:
003E 0000      01461         BANKSEL _remoteWakeup
               01462 ;       .line   584; usb.c      remoteWakeup = 0;
0040 6B00      01463         CLRF    _remoteWakeup, B
0042 D000      01464         BRA     _00348_DS_
0044           01465 _00346_DS_:
               01466 ;       .line   588; usb.c      else if (recipient == 0x02)
0044 5000      01467         MOVF    r0x00, W
0046 0A02      01468         XORLW   0x02
0048 E000      01469         BZ      _00365_DS_
004A D000      01470         BRA     _00348_DS_
004C           01471 _00365_DS_:
               01472 ;       .line   591; usb.c      byte endpointNum = SetupPacket.wIndex0 & 0x0F;
004C 0E0F      01473         MOVLW   0x0f
004E 0000      01474         BANKSEL (_SetupPacket + 4)
0050 1500      01475         ANDWF   (_SetupPacket + 4), W, B
0052 6E00      01476         MOVWF   r0x00
               01477 ;       .line   592; usb.c      byte endpointDir = SetupPacket.wIndex0 & 0x80;
0054 0E80      01478         MOVLW   0x80
               01479 ; removed redundant BANKSEL
0056 1500      01480         ANDWF   (_SetupPacket + 4), W, B
0058 6E00      01481         MOVWF   r0x02
               01482 ;       .line   593; usb.c      if ((feature == ENDPOINT_HALT) && (endpointNum != 0))
005A 5000      01483         MOVF    r0x01, W
005C A4D8      01484         BTFSS   STATUS, 2
005E D000      01485         BRA     _00348_DS_
0060 5000      01486         MOVF    r0x00, W
0062 E100      01487         BNZ     _00369_DS_
0064 D000      01488         BRA     _00348_DS_
0066           01489 _00369_DS_:
               01490 ;       .line   596; usb.c      requestHandled = 1;
0066 0E01      01491         MOVLW   0x01
0068 0000      01492         BANKSEL _requestHandled
006A 6F00      01493         MOVWF   _requestHandled, B
               01494 ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
               01495 ; ;Unrolled 8 X 8 multiplication
               01496 ; ;FIXME: the function does not support result==WREG
               01497 ;       .line   599; usb.c      inPtr = (byte *)&ep0Bo + (endpointNum * 8);
006C 5000      01498         MOVF    r0x00, W
006E 0D08      01499         MULLW   0x08
0070 CFF3 F000 01500         MOVFF   PRODL, r0x00
0074 CFF4 F000 01501         MOVFF   PRODH, r0x01
0078 5000      01502         MOVF    r0x00, W
007A 0000      01503         BANKSEL _inPtr
007C 6F00      01504         MOVWF   _inPtr, B
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007E 0E04      01505         MOVLW   0x04
0080 2400      01506         ADDWF   r0x01, W
               01507 ; removed redundant BANKSEL
0082 6F00      01508         MOVWF   (_inPtr + 1), B
0084 0E80      01509         MOVLW   0x80
               01510 ; removed redundant BANKSEL
0086 6B00      01511         CLRF    (_inPtr + 2), B
0088 AE00      01512         BTFSS   r0x01, 7
008A D000      01513         BRA     _90636_DS_
               01514 ; removed redundant BANKSEL
008C 6900      01515         SETF    (_inPtr + 2), B
008E           01516 _90636_DS_:
008E 0000      01517         BANKSEL (_inPtr + 2)
0090 2300      01518         ADDWFC  (_inPtr + 2), F, B
               01519 ;       .line   600; usb.c      if (endpointDir)
0092 5000      01520         MOVF    r0x02, W
0094 E000      01521         BZ      _00333_DS_
               01522 ;       .line   601; usb.c      inPtr += 4;
0096 0E04      01523         MOVLW   0x04
               01524 ; removed redundant BANKSEL
0098 2700      01525         ADDWF   _inPtr, F, B
009A 0E00      01526         MOVLW   0x00
               01527 ; removed redundant BANKSEL
009C 2300      01528         ADDWFC  (_inPtr + 1), F, B
               01529 ; removed redundant BANKSEL
009E 2300      01530         ADDWFC  (_inPtr + 2), F, B
00A0           01531 _00333_DS_:
00A0 0000      01532         BANKSEL (_SetupPacket + 1)
               01533 ;       .line   603; usb.c      if(SetupPacket.bRequest == SET_FEATURE)
00A2 5100      01534         MOVF    (_SetupPacket + 1), W, B
00A4 0A03      01535         XORLW   0x03
00A6 E100      01536         BNZ     _00338_DS_
               01537 ;       .line   604; usb.c      *inPtr = 0x84;
00A8 C000 F000 01538         MOVFF   _inPtr, r0x00
00AC C000 F000 01539         MOVFF   (_inPtr + 1), r0x01
00B0 C000 F000 01540         MOVFF   (_inPtr + 2), r0x03
00B4 0E84      01541         MOVLW   0x84
00B6 6EE5      01542         MOVWF   POSTDEC1
00B8 C000 FFE9 01543         MOVFF   r0x00, FSR0L
00BC C000 FFF3 01544         MOVFF   r0x01, PRODL
00C0 5000      01545         MOVF    r0x03, W
00C2 EC00 F000 01546         CALL    __gptrput1
00C6 D000      01547         BRA     _00348_DS_
00C8           01548 _00338_DS_:
               01549 ;       .line   607; usb.c      if(endpointDir == 1)
00C8 5000      01550         MOVF    r0x02, W
00CA 0A01      01551         XORLW   0x01
00CC E100      01552         BNZ     _00335_DS_
               01553 ;       .line   608; usb.c      *inPtr = 0x00;
00CE C000 F000 01554         MOVFF   _inPtr, r0x00
00D2 C000 F000 01555         MOVFF   (_inPtr + 1), r0x01
00D6 C000 F000 01556         MOVFF   (_inPtr + 2), r0x02
00DA 6AE5      01557         CLRF    POSTDEC1
00DC C000 FFE9 01558         MOVFF   r0x00, FSR0L
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E0 C000 FFF3 01559         MOVFF   r0x01, PRODL
00E4 5000      01560         MOVF    r0x02, W
00E6 EC00 F000 01561         CALL    __gptrput1
00EA D000      01562         BRA     _00348_DS_
00EC           01563 _00335_DS_:
               01564 ;       .line   610; usb.c      *inPtr = 0x88;
00EC C000 F000 01565         MOVFF   _inPtr, r0x00
00F0 C000 F000 01566         MOVFF   (_inPtr + 1), r0x01
00F4 C000 F000 01567         MOVFF   (_inPtr + 2), r0x02
00F8 0E88      01568         MOVLW   0x88
00FA 6EE5      01569         MOVWF   POSTDEC1
00FC C000 FFE9 01570         MOVFF   r0x00, FSR0L
0100 C000 FFF3 01571         MOVFF   r0x01, PRODL
0104 5000      01572         MOVF    r0x02, W
0106 EC00 F000 01573         CALL    __gptrput1
010A           01574 _00348_DS_:
010A CFE4 F000 01575         MOVFF   PREINC1, r0x03
010E CFE4 F000 01576         MOVFF   PREINC1, r0x02
0112 CFE4 F000 01577         MOVFF   PREINC1, r0x01
0116 CFE4 F000 01578         MOVFF   PREINC1, r0x00
011A 0012      01579         RETURN  
               01580 
               01581 ; ; Starting pCode block
               01582 S_usb__GetStatus        code
0000           01583 _GetStatus:
               01584 ;       .line   518; usb.c      static void GetStatus(void)
0000 C000 FFE5 01585         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 01586         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 01587         MOVFF   r0x02, POSTDEC1
               01588 ;       .line   521; usb.c      byte recipient = SetupPacket.bmRequestType & 0x1F;
000C 0E1F      01589         MOVLW   0x1f
000E 0000      01590         BANKSEL _SetupPacket
0010 1500      01591         ANDWF   _SetupPacket, W, B
0012 6E00      01592         MOVWF   r0x00
0014 0000      01593         BANKSEL _controlTransferBuffer
               01594 ;       .line   525; usb.c      controlTransferBuffer[0] = 0;
0016 6B00      01595         CLRF    _controlTransferBuffer, B
               01596 ; removed redundant BANKSEL
               01597 ;       .line   526; usb.c      controlTransferBuffer[1] = 0;
0018 6B00      01598         CLRF    (_controlTransferBuffer + 1), B
               01599 ;       .line   529; usb.c      if (recipient == 0x00)
001A 5000      01600         MOVF    r0x00, W
001C E100      01601         BNZ     _00304_DS_
               01602 ;       .line   532; usb.c      requestHandled = 1;
001E 0E01      01603         MOVLW   0x01
0020 0000      01604         BANKSEL _requestHandled
0022 6F00      01605         MOVWF   _requestHandled, B
0024 0000      01606         BANKSEL _selfPowered
               01607 ;       .line   534; usb.c      if (selfPowered)
0026 5100      01608         MOVF    _selfPowered, W, B
0028 E000      01609         BZ      _00291_DS_
               01610 ;       .line   535; usb.c      controlTransferBuffer[0] |= 0x01;
002A 0E01      01611         MOVLW   0x01
002C 0000      01612         BANKSEL _controlTransferBuffer
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002E 1100      01613         IORWF   _controlTransferBuffer, W, B
               01614 ; #     MOVWF   r0x01
               01615 ; #     MOVF    r0x01, W
               01616 ; ;     peep 2 - Removed redundant move
0030 6F00      01617         MOVWF   _controlTransferBuffer, B
0032           01618 _00291_DS_:
0032 0000      01619         BANKSEL _remoteWakeup
               01620 ;       .line   536; usb.c      if (remoteWakeup)
0034 5100      01621         MOVF    _remoteWakeup, W, B
0036 B4D8      01622         BTFSC   STATUS, 2
0038 D000      01623         BRA     _00305_DS_
               01624 ;       .line   537; usb.c      controlTransferBuffer[0] |= 0x02;
003A 0E02      01625         MOVLW   0x02
003C 0000      01626         BANKSEL _controlTransferBuffer
003E 1100      01627         IORWF   _controlTransferBuffer, W, B
               01628 ; #     MOVWF   r0x01
               01629 ; #     MOVF    r0x01, W
               01630 ; ;     peep 2 - Removed redundant move
0040 6F00      01631         MOVWF   _controlTransferBuffer, B
0042 D000      01632         BRA     _00305_DS_
0044           01633 _00304_DS_:
               01634 ;       .line   539; usb.c      else if (recipient == 0x01)
0044 5000      01635         MOVF    r0x00, W
0046 0A01      01636         XORLW   0x01
0048 E100      01637         BNZ     _00301_DS_
               01638 ;       .line   542; usb.c      requestHandled = 1;
004A 0E01      01639         MOVLW   0x01
004C 0000      01640         BANKSEL _requestHandled
004E 6F00      01641         MOVWF   _requestHandled, B
0050 D000      01642         BRA     _00305_DS_
0052           01643 _00301_DS_:
               01644 ;       .line   544; usb.c      else if (recipient == 0x02)
0052 5000      01645         MOVF    r0x00, W
0054 0A02      01646         XORLW   0x02
0056 E000      01647         BZ      _00322_DS_
0058 D000      01648         BRA     _00305_DS_
005A           01649 _00322_DS_:
               01650 ;       .line   547; usb.c      byte endpointNum = SetupPacket.wIndex0 & 0x0F;
005A 0E0F      01651         MOVLW   0x0f
005C 0000      01652         BANKSEL (_SetupPacket + 4)
005E 1500      01653         ANDWF   (_SetupPacket + 4), W, B
0060 6E00      01654         MOVWF   r0x00
               01655 ;       .line   548; usb.c      byte endpointDir = SetupPacket.wIndex0 & 0x80;
0062 0E80      01656         MOVLW   0x80
               01657 ; removed redundant BANKSEL
0064 1500      01658         ANDWF   (_SetupPacket + 4), W, B
0066 6E00      01659         MOVWF   r0x01
               01660 ;       .line   549; usb.c      requestHandled = 1;
0068 0E01      01661         MOVLW   0x01
006A 0000      01662         BANKSEL _requestHandled
006C 6F00      01663         MOVWF   _requestHandled, B
               01664 ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
               01665 ; ;Unrolled 8 X 8 multiplication
               01666 ; ;FIXME: the function does not support result==WREG
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01667 ;       .line   552; usb.c      inPtr = (byte *)&ep0Bo + (endpointNum * 8);
006E 5000      01668         MOVF    r0x00, W
0070 0D08      01669         MULLW   0x08
0072 CFF3 F000 01670         MOVFF   PRODL, r0x00
0076 CFF4 F000 01671         MOVFF   PRODH, r0x02
007A 5000      01672         MOVF    r0x00, W
007C 0000      01673         BANKSEL _inPtr
007E 6F00      01674         MOVWF   _inPtr, B
0080 0E04      01675         MOVLW   0x04
0082 2400      01676         ADDWF   r0x02, W
               01677 ; removed redundant BANKSEL
0084 6F00      01678         MOVWF   (_inPtr + 1), B
0086 0E80      01679         MOVLW   0x80
               01680 ; removed redundant BANKSEL
0088 6B00      01681         CLRF    (_inPtr + 2), B
008A AE00      01682         BTFSS   r0x02, 7
008C D000      01683         BRA     _100637_DS_
               01684 ; removed redundant BANKSEL
008E 6900      01685         SETF    (_inPtr + 2), B
0090           01686 _100637_DS_:
0090 0000      01687         BANKSEL (_inPtr + 2)
0092 2300      01688         ADDWFC  (_inPtr + 2), F, B
               01689 ;       .line   553; usb.c      if (endpointDir)
0094 5000      01690         MOVF    r0x01, W
0096 E000      01691         BZ      _00295_DS_
               01692 ;       .line   554; usb.c      inPtr += 4;
0098 0E04      01693         MOVLW   0x04
               01694 ; removed redundant BANKSEL
009A 2700      01695         ADDWF   _inPtr, F, B
009C 0E00      01696         MOVLW   0x00
               01697 ; removed redundant BANKSEL
009E 2300      01698         ADDWFC  (_inPtr + 1), F, B
               01699 ; removed redundant BANKSEL
00A0 2300      01700         ADDWFC  (_inPtr + 2), F, B
00A2           01701 _00295_DS_:
               01702 ;       .line   555; usb.c      if(*inPtr & BSTALL)
00A2 C000 F000 01703         MOVFF   _inPtr, r0x00
00A6 C000 F000 01704         MOVFF   (_inPtr + 1), r0x01
00AA C000 F000 01705         MOVFF   (_inPtr + 2), r0x02
00AE C000 FFE9 01706         MOVFF   r0x00, FSR0L
00B2 C000 FFF3 01707         MOVFF   r0x01, PRODL
00B6 5000      01708         MOVF    r0x02, W
00B8 EC00 F000 01709         CALL    __gptrget1
00BC 6E00      01710         MOVWF   r0x00
00BE A400      01711         BTFSS   r0x00, 2
00C0 D000      01712         BRA     _00305_DS_
               01713 ;       .line   556; usb.c      controlTransferBuffer[0] = 0x01;
00C2 0E01      01714         MOVLW   0x01
00C4 0000      01715         BANKSEL _controlTransferBuffer
00C6 6F00      01716         MOVWF   _controlTransferBuffer, B
00C8           01717 _00305_DS_:
00C8 0000      01718         BANKSEL _requestHandled
               01719 ;       .line   559; usb.c      if (requestHandled)
00CA 5100      01720         MOVF    _requestHandled, W, B
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00CC E000      01721         BZ      _00308_DS_
               01722 ;       .line   561; usb.c      outPtr = (byte *)&controlTransferBuffer;
00CE 0E00      01723         MOVLW   HIGH(_controlTransferBuffer)
00D0 0000      01724         BANKSEL (_outPtr + 1)
00D2 6F00      01725         MOVWF   (_outPtr + 1), B
00D4 0E00      01726         MOVLW   LOW(_controlTransferBuffer)
               01727 ; removed redundant BANKSEL
00D6 6F00      01728         MOVWF   _outPtr, B
00D8 0E80      01729         MOVLW   0x80
               01730 ; removed redundant BANKSEL
00DA 6F00      01731         MOVWF   (_outPtr + 2), B
               01732 ;       .line   562; usb.c      wCount = 2;
00DC 0E02      01733         MOVLW   0x02
00DE 0000      01734         BANKSEL _wCount
00E0 6F00      01735         MOVWF   _wCount, B
               01736 ; removed redundant BANKSEL
00E2 6B00      01737         CLRF    (_wCount + 1), B
00E4           01738 _00308_DS_:
00E4 CFE4 F000 01739         MOVFF   PREINC1, r0x02
00E8 CFE4 F000 01740         MOVFF   PREINC1, r0x01
00EC CFE4 F000 01741         MOVFF   PREINC1, r0x00
00F0 0012      01742         RETURN  
               01743 
               01744 ; ; Starting pCode block
               01745 S_usb__GetDescriptor    code
0000           01746 _GetDescriptor:
               01747 ;       .line   452; usb.c      static void GetDescriptor(void)
0000 C000 FFE5 01748         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 01749         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 01750         MOVFF   r0x02, POSTDEC1
000C 0000      01751         BANKSEL _SetupPacket
               01752 ;       .line   457; usb.c      if(SetupPacket.bmRequestType == 0x80)
000E 5100      01753         MOVF    _SetupPacket, W, B
0010 0A80      01754         XORLW   0x80
0012 E000      01755         BZ      _00277_DS_
0014 D000      01756         BRA     _00268_DS_
0016           01757 _00277_DS_:
               01758 ;       .line   459; usb.c      byte descriptorType  = SetupPacket.wValue1;
0016 C000 F000 01759         MOVFF   (_SetupPacket + 3), r0x00
               01760 ;       .line   460; usb.c      byte descriptorIndex = SetupPacket.wValue0;
001A C000 F000 01761         MOVFF   (_SetupPacket + 2), r0x01
               01762 ;       .line   462; usb.c      if (descriptorType == DEVICE_DESCRIPTOR)
001E 5000      01763         MOVF    r0x00, W
0020 0A01      01764         XORLW   0x01
0022 E100      01765         BNZ     _00264_DS_
               01766 ;       .line   467; usb.c      requestHandled = 1;
0024 0E01      01767         MOVLW   0x01
0026 0000      01768         BANKSEL _requestHandled
0028 6F00      01769         MOVWF   _requestHandled, B
               01770 ;       .line   468; usb.c      outPtr = (byte *)&deviceDescriptor;
002A 0E00      01771         MOVLW   LOW(_deviceDescriptor)
002C 0000      01772         BANKSEL _outPtr
002E 6F00      01773         MOVWF   _outPtr, B
0030 0E00      01774         MOVLW   HIGH(_deviceDescriptor)
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01775 ; removed redundant BANKSEL
0032 6F00      01776         MOVWF   (_outPtr + 1), B
0034 0E00      01777         MOVLW   UPPER(_deviceDescriptor)
               01778 ; removed redundant BANKSEL
0036 6F00      01779         MOVWF   (_outPtr + 2), B
               01780 ;       .line   469; usb.c      wCount = DEVICE_DESCRIPTOR_SIZE;
0038 0E12      01781         MOVLW   0x12
003A 0000      01782         BANKSEL _wCount
003C 6F00      01783         MOVWF   _wCount, B
               01784 ; removed redundant BANKSEL
003E 6B00      01785         CLRF    (_wCount + 1), B
0040 D000      01786         BRA     _00268_DS_
0042           01787 _00264_DS_:
               01788 ;       .line   471; usb.c      else if (descriptorType == CONFIGURATION_DESCRIPTOR)
0042 5000      01789         MOVF    r0x00, W
0044 0A02      01790         XORLW   0x02
0046 E100      01791         BNZ     _00261_DS_
               01792 ;       .line   476; usb.c      requestHandled = 1;
0048 0E01      01793         MOVLW   0x01
004A 0000      01794         BANKSEL _requestHandled
004C 6F00      01795         MOVWF   _requestHandled, B
               01796 ;       .line   487; usb.c      outPtr = (byte *)&configDescriptor;
004E 0E00      01797         MOVLW   LOW(_configDescriptor)
0050 0000      01798         BANKSEL _outPtr
0052 6F00      01799         MOVWF   _outPtr, B
0054 0E00      01800         MOVLW   HIGH(_configDescriptor)
               01801 ; removed redundant BANKSEL
0056 6F00      01802         MOVWF   (_outPtr + 1), B
0058 0E00      01803         MOVLW   UPPER(_configDescriptor)
               01804 ; removed redundant BANKSEL
005A 6F00      01805         MOVWF   (_outPtr + 2), B
               01806 ;       .line   488; usb.c      wCount = configDescriptor.configHeader[2]; // Note: SDCC makes bad code with this
005C 0E00      01807         MOVLW   LOW(_configDescriptor + 2)
005E 6EF6      01808         MOVWF   TBLPTRL
0060 0E00      01809         MOVLW   HIGH(_configDescriptor + 2)
0062 6EF7      01810         MOVWF   TBLPTRH
0064 0E00      01811         MOVLW   UPPER(_configDescriptor + 2)
0066 6EF8      01812         MOVWF   TBLPTRU
0068 0009      01813         TBLRD*+ 
006A CFF5 F000 01814         MOVFF   TABLAT, r0x02
006E C000 F000 01815         MOVFF   r0x02, _wCount
0072 0000      01816         BANKSEL (_wCount + 1)
0074 6B00      01817         CLRF    (_wCount + 1), B
0076 D000      01818         BRA     _00268_DS_
0078           01819 _00261_DS_:
               01820 ;       .line   494; usb.c      else if (descriptorType == STRING_DESCRIPTOR)
0078 5000      01821         MOVF    r0x00, W
007A 0A03      01822         XORLW   0x03
007C E100      01823         BNZ     _00268_DS_
               01824 ;       .line   499; usb.c      requestHandled = 1;
007E 0E01      01825         MOVLW   0x01
0080 0000      01826         BANKSEL _requestHandled
0082 6F00      01827         MOVWF   _requestHandled, B
               01828 ;       .line   500; usb.c      if (descriptorIndex == 0)
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0084 5000      01829         MOVF    r0x01, W
0086 E100      01830         BNZ     _00256_DS_
               01831 ;       .line   501; usb.c      outPtr = &stringDescriptor0;
0088 0E00      01832         MOVLW   LOW(_stringDescriptor0)
008A 0000      01833         BANKSEL _outPtr
008C 6F00      01834         MOVWF   _outPtr, B
008E 0E00      01835         MOVLW   HIGH(_stringDescriptor0)
               01836 ; removed redundant BANKSEL
0090 6F00      01837         MOVWF   (_outPtr + 1), B
0092 0E00      01838         MOVLW   UPPER(_stringDescriptor0)
               01839 ; removed redundant BANKSEL
0094 6F00      01840         MOVWF   (_outPtr + 2), B
0096 D000      01841         BRA     _00257_DS_
0098           01842 _00256_DS_:
               01843 ;       .line   502; usb.c      else if (descriptorIndex == 1)
0098 5000      01844         MOVF    r0x01, W
009A 0A01      01845         XORLW   0x01
009C E100      01846         BNZ     _00253_DS_
               01847 ;       .line   503; usb.c      outPtr = &stringDescriptor1;
009E 0E00      01848         MOVLW   LOW(_stringDescriptor1)
00A0 0000      01849         BANKSEL _outPtr
00A2 6F00      01850         MOVWF   _outPtr, B
00A4 0E00      01851         MOVLW   HIGH(_stringDescriptor1)
               01852 ; removed redundant BANKSEL
00A6 6F00      01853         MOVWF   (_outPtr + 1), B
00A8 0E00      01854         MOVLW   UPPER(_stringDescriptor1)
               01855 ; removed redundant BANKSEL
00AA 6F00      01856         MOVWF   (_outPtr + 2), B
00AC D000      01857         BRA     _00257_DS_
00AE           01858 _00253_DS_:
               01859 ;       .line   505; usb.c      outPtr = &stringDescriptor2;
00AE 0E00      01860         MOVLW   LOW(_stringDescriptor2)
00B0 0000      01861         BANKSEL _outPtr
00B2 6F00      01862         MOVWF   _outPtr, B
00B4 0E00      01863         MOVLW   HIGH(_stringDescriptor2)
               01864 ; removed redundant BANKSEL
00B6 6F00      01865         MOVWF   (_outPtr + 1), B
00B8 0E00      01866         MOVLW   UPPER(_stringDescriptor2)
               01867 ; removed redundant BANKSEL
00BA 6F00      01868         MOVWF   (_outPtr + 2), B
00BC           01869 _00257_DS_:
               01870 ;       .line   506; usb.c      wCount = *outPtr;
00BC C000 F000 01871         MOVFF   _outPtr, r0x00
00C0 C000 F000 01872         MOVFF   (_outPtr + 1), r0x01
00C4 C000 F000 01873         MOVFF   (_outPtr + 2), r0x02
00C8 C000 FFE9 01874         MOVFF   r0x00, FSR0L
00CC C000 FFF3 01875         MOVFF   r0x01, PRODL
00D0 5000      01876         MOVF    r0x02, W
00D2 EC00 F000 01877         CALL    __gptrget1
00D6 6E00      01878         MOVWF   r0x00
00D8 C000 F000 01879         MOVFF   r0x00, _wCount
00DC 0000      01880         BANKSEL (_wCount + 1)
00DE 6B00      01881         CLRF    (_wCount + 1), B
00E0           01882 _00268_DS_:
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E0 CFE4 F000 01883         MOVFF   PREINC1, r0x02
00E4 CFE4 F000 01884         MOVFF   PREINC1, r0x01
00E8 CFE4 F000 01885         MOVFF   PREINC1, r0x00
00EC 0012      01886         RETURN  
               01887 
               01888 ; ; Starting pCode block
               01889 S_usb__ProcessHIDRequest        code
0000           01890 _ProcessHIDRequest:
               01891 ;       .line   332; usb.c      void ProcessHIDRequest(void)
0000 C000 FFE5 01892         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 01893         MOVFF   r0x01, POSTDEC1
               01894 ;       .line   337; usb.c      if((SetupPacket.bmRequestType & 0x1F) != 0x01 || (SetupPacket.wIndex0 != 0x00))
0008 0E1F      01895         MOVLW   0x1f
000A 0000      01896         BANKSEL _SetupPacket
000C 1500      01897         ANDWF   _SetupPacket, W, B
               01898 ; #     MOVWF   r0x00
               01899 ; #     MOVF    r0x00, W
               01900 ; ;     peep 2 - Removed redundant move
000E 0A01      01901         XORLW   0x01
0010 E100      01902         BNZ     _00179_DS_
0012           01903 _00224_DS_:
0012 0000      01904         BANKSEL (_SetupPacket + 4)
0014 5100      01905         MOVF    (_SetupPacket + 4), W, B
0016 E000      01906         BZ      _00180_DS_
0018           01907 _00179_DS_:
               01908 ;       .line   338; usb.c      return;
0018 D000      01909         BRA     _00209_DS_
001A           01910 _00180_DS_:
               01911 ;       .line   340; usb.c      bRequest = SetupPacket.bRequest;
001A C000 F000 01912         MOVFF   (_SetupPacket + 1), r0x00
               01913 ;       .line   342; usb.c      if (bRequest == GET_DESCRIPTOR)
001E 5000      01914         MOVF    r0x00, W
0020 0A06      01915         XORLW   0x06
0022 E100      01916         BNZ     _00189_DS_
               01917 ;       .line   345; usb.c      byte descriptorType  = SetupPacket.wValue1;
0024 C000 F000 01918         MOVFF   (_SetupPacket + 3), r0x01
               01919 ;       .line   346; usb.c      if (descriptorType == HID_DESCRIPTOR)
0028 5000      01920         MOVF    r0x01, W
002A 0A21      01921         XORLW   0x21
002C E100      01922         BNZ     _00186_DS_
               01923 ;       .line   352; usb.c      requestHandled = 1;
002E 0E01      01924         MOVLW   0x01
0030 0000      01925         BANKSEL _requestHandled
0032 6F00      01926         MOVWF   _requestHandled, B
               01927 ;       .line   353; usb.c      outPtr = &configDescriptor.HIDDescriptor;
0034 0E09      01928         MOVLW   0x09
0036 2400      01929         ADDWF   LOW(_configDescriptor), W
0038 0000      01930         BANKSEL _outPtr
003A 6F00      01931         MOVWF   _outPtr, B
003C 0E00      01932         MOVLW   0x00
003E 2000      01933         ADDWFC  HIGH(_configDescriptor), W
               01934 ; removed redundant BANKSEL
0040 6F00      01935         MOVWF   (_outPtr + 1), B
0042 0E00      01936         MOVLW   0x00
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0044 2000      01937         ADDWFC  UPPER(_configDescriptor), W
               01938 ; removed redundant BANKSEL
0046 6F00      01939         MOVWF   (_outPtr + 2), B
               01940 ;       .line   354; usb.c      wCount = HID_HEADER_SIZE;
0048 0E09      01941         MOVLW   0x09
004A 0000      01942         BANKSEL _wCount
004C 6F00      01943         MOVWF   _wCount, B
               01944 ; removed redundant BANKSEL
004E 6B00      01945         CLRF    (_wCount + 1), B
0050 D000      01946         BRA     _00189_DS_
0052           01947 _00186_DS_:
               01948 ;       .line   356; usb.c      else if (descriptorType == REPORT_DESCRIPTOR)
0052 5000      01949         MOVF    r0x01, W
0054 0A22      01950         XORLW   0x22
0056 E100      01951         BNZ     _00189_DS_
               01952 ;       .line   362; usb.c      requestHandled = 1;
0058 0E01      01953         MOVLW   0x01
005A 0000      01954         BANKSEL _requestHandled
005C 6F00      01955         MOVWF   _requestHandled, B
               01956 ;       .line   363; usb.c      outPtr = (code byte *)HIDReport;
005E 0E00      01957         MOVLW   LOW(_HIDReport)
0060 0000      01958         BANKSEL _outPtr
0062 6F00      01959         MOVWF   _outPtr, B
0064 0E00      01960         MOVLW   HIGH(_HIDReport)
               01961 ; removed redundant BANKSEL
0066 6F00      01962         MOVWF   (_outPtr + 1), B
0068 0E00      01963         MOVLW   UPPER(_HIDReport)
               01964 ; removed redundant BANKSEL
006A 6F00      01965         MOVWF   (_outPtr + 2), B
               01966 ;       .line   364; usb.c      wCount = HID_REPORT_SIZE;
006C 0E2F      01967         MOVLW   0x2f
006E 0000      01968         BANKSEL _wCount
0070 6F00      01969         MOVWF   _wCount, B
               01970 ; removed redundant BANKSEL
0072 6B00      01971         CLRF    (_wCount + 1), B
0074           01972 _00189_DS_:
               01973 ;       .line   381; usb.c      if ((SetupPacket.bmRequestType & 0x60) != 0x20)
0074 0E60      01974         MOVLW   0x60
0076 0000      01975         BANKSEL _SetupPacket
0078 1500      01976         ANDWF   _SetupPacket, W, B
               01977 ; #     MOVWF   r0x01
               01978 ; #     MOVF    r0x01, W
               01979 ; ;     peep 2 - Removed redundant move
007A 0A20      01980         XORLW   0x20
007C E000      01981         BZ      _00191_DS_
               01982 ;       .line   386; usb.c      return;
007E D000      01983         BRA     _00209_DS_
0080           01984 _00191_DS_:
               01985 ;       .line   390; usb.c      if (bRequest == GET_REPORT)
0080 5000      01986         MOVF    r0x00, W
0082 0A01      01987         XORLW   0x01
0084 E100      01988         BNZ     _00207_DS_
               01989 ;       .line   395; usb.c      HIDGetReport();
0086 EC00 F000 01990         CALL    _HIDGetReport
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008A D000      01991         BRA     _00209_DS_
008C           01992 _00207_DS_:
               01993 ;       .line   397; usb.c      else if (bRequest == SET_REPORT)
008C 5000      01994         MOVF    r0x00, W
008E 0A09      01995         XORLW   0x09
0090 E100      01996         BNZ     _00204_DS_
               01997 ;       .line   402; usb.c      HIDPostProcess = 1;
0092 0E01      01998         MOVLW   0x01
0094 0000      01999         BANKSEL _HIDPostProcess
0096 6F00      02000         MOVWF   _HIDPostProcess, B
               02001 ;       .line   403; usb.c      HIDSetReport();            
0098 EC00 F000 02002         CALL    _HIDSetReport
009C D000      02003         BRA     _00209_DS_
009E           02004 _00204_DS_:
               02005 ;       .line   405; usb.c      else if (bRequest == GET_IDLE)
009E 5000      02006         MOVF    r0x00, W
00A0 0A02      02007         XORLW   0x02
00A2 E100      02008         BNZ     _00201_DS_
               02009 ;       .line   410; usb.c      requestHandled = 1;
00A4 0E01      02010         MOVLW   0x01
00A6 0000      02011         BANKSEL _requestHandled
00A8 6F00      02012         MOVWF   _requestHandled, B
               02013 ;       .line   411; usb.c      outPtr = &hidIdleRate;
00AA 0E00      02014         MOVLW   HIGH(_hidIdleRate)
00AC 0000      02015         BANKSEL (_outPtr + 1)
00AE 6F00      02016         MOVWF   (_outPtr + 1), B
00B0 0E00      02017         MOVLW   LOW(_hidIdleRate)
               02018 ; removed redundant BANKSEL
00B2 6F00      02019         MOVWF   _outPtr, B
00B4 0E80      02020         MOVLW   0x80
               02021 ; removed redundant BANKSEL
00B6 6F00      02022         MOVWF   (_outPtr + 2), B
               02023 ;       .line   412; usb.c      wCount = 1;
00B8 0E01      02024         MOVLW   0x01
00BA 0000      02025         BANKSEL _wCount
00BC 6F00      02026         MOVWF   _wCount, B
               02027 ; removed redundant BANKSEL
00BE 6B00      02028         CLRF    (_wCount + 1), B
00C0 D000      02029         BRA     _00209_DS_
00C2           02030 _00201_DS_:
               02031 ;       .line   414; usb.c      else if (bRequest == SET_IDLE)
00C2 5000      02032         MOVF    r0x00, W
00C4 0A0A      02033         XORLW   0x0a
00C6 E100      02034         BNZ     _00198_DS_
               02035 ;       .line   419; usb.c      requestHandled = 1;
00C8 0E01      02036         MOVLW   0x01
00CA 0000      02037         BANKSEL _requestHandled
00CC 6F00      02038         MOVWF   _requestHandled, B
               02039 ;       .line   420; usb.c      hidIdleRate = SetupPacket.wValue1;
00CE C000 F000 02040         MOVFF   (_SetupPacket + 3), _hidIdleRate
00D2 D000      02041         BRA     _00209_DS_
00D4           02042 _00198_DS_:
               02043 ;       .line   422; usb.c      else if (bRequest == GET_PROTOCOL)
00D4 5000      02044         MOVF    r0x00, W
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D6 0A03      02045         XORLW   0x03
00D8 E100      02046         BNZ     _00195_DS_
               02047 ;       .line   427; usb.c      requestHandled = 1;
00DA 0E01      02048         MOVLW   0x01
00DC 0000      02049         BANKSEL _requestHandled
00DE 6F00      02050         MOVWF   _requestHandled, B
               02051 ;       .line   428; usb.c      outPtr = &hidProtocol;
00E0 0E00      02052         MOVLW   HIGH(_hidProtocol)
00E2 0000      02053         BANKSEL (_outPtr + 1)
00E4 6F00      02054         MOVWF   (_outPtr + 1), B
00E6 0E00      02055         MOVLW   LOW(_hidProtocol)
               02056 ; removed redundant BANKSEL
00E8 6F00      02057         MOVWF   _outPtr, B
00EA 0E80      02058         MOVLW   0x80
               02059 ; removed redundant BANKSEL
00EC 6F00      02060         MOVWF   (_outPtr + 2), B
               02061 ;       .line   429; usb.c      wCount = 1;
00EE 0E01      02062         MOVLW   0x01
00F0 0000      02063         BANKSEL _wCount
00F2 6F00      02064         MOVWF   _wCount, B
               02065 ; removed redundant BANKSEL
00F4 6B00      02066         CLRF    (_wCount + 1), B
00F6 D000      02067         BRA     _00209_DS_
00F8           02068 _00195_DS_:
               02069 ;       .line   431; usb.c      else if (bRequest == SET_PROTOCOL)
00F8 5000      02070         MOVF    r0x00, W
00FA 0A0B      02071         XORLW   0x0b
00FC E100      02072         BNZ     _00209_DS_
               02073 ;       .line   436; usb.c      requestHandled = 1;
00FE 0E01      02074         MOVLW   0x01
0100 0000      02075         BANKSEL _requestHandled
0102 6F00      02076         MOVWF   _requestHandled, B
               02077 ;       .line   437; usb.c      hidProtocol = SetupPacket.wValue0;
0104 C000 F000 02078         MOVFF   (_SetupPacket + 2), _hidProtocol
0108           02079 _00209_DS_:
0108 CFE4 F000 02080         MOVFF   PREINC1, r0x01
010C CFE4 F000 02081         MOVFF   PREINC1, r0x00
0110 0012      02082         RETURN  
               02083 
               02084 ; ; Starting pCode block
               02085 S_usb__HIDSetReport     code
0000           02086 _HIDSetReport:
               02087 ;       .line   317; usb.c      void HIDSetReport(void)
0000 C000 FFE5 02088         MOVFF   r0x00, POSTDEC1
               02089 ;       .line   319; usb.c      byte reportID = SetupPacket.wValue0;
0004 C000 F000 02090         MOVFF   (_SetupPacket + 2), r0x00
0008 0000      02091         BANKSEL (_SetupPacket + 3)
               02092 ;       .line   325; usb.c      if (SetupPacket.wValue1 == 0x02)
000A 5100      02093         MOVF    (_SetupPacket + 3), W, B
000C 0A02      02094         XORLW   0x02
000E E100      02095         BNZ     _00165_DS_
               02096 ;       .line   326; usb.c      requestHandled = SetupOutputReport(reportID);
0010 5000      02097         MOVF    r0x00, W
0012 6EE5      02098         MOVWF   POSTDEC1
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0014 EC00 F000 02099         CALL    _SetupOutputReport
0018 2AE1      02100         INCF    FSR1L, F
001A 0000      02101         BANKSEL _requestHandled
001C 6F00      02102         MOVWF   _requestHandled, B
001E D000      02103         BRA     _00167_DS_
0020           02104 _00165_DS_:
0020 0000      02105         BANKSEL (_SetupPacket + 3)
               02106 ;       .line   327; usb.c      else if (SetupPacket.wValue1 == 0x03)
0022 5100      02107         MOVF    (_SetupPacket + 3), W, B
0024 0A03      02108         XORLW   0x03
0026 E100      02109         BNZ     _00167_DS_
               02110 ;       .line   328; usb.c      requestHandled = SetupFeatureReport(reportID);
0028 5000      02111         MOVF    r0x00, W
002A 6EE5      02112         MOVWF   POSTDEC1
002C EC00 F000 02113         CALL    _SetupFeatureReport
0030 2AE1      02114         INCF    FSR1L, F
0032 0000      02115         BANKSEL _requestHandled
0034 6F00      02116         MOVWF   _requestHandled, B
0036           02117 _00167_DS_:
0036 CFE4 F000 02118         MOVFF   PREINC1, r0x00
003A 0012      02119         RETURN  
               02120 
               02121 ; ; Starting pCode block
               02122 S_usb__HIDGetReport     code
0000           02123 _HIDGetReport:
               02124 ;       .line   302; usb.c      void HIDGetReport(void)
0000 C000 FFE5 02125         MOVFF   r0x00, POSTDEC1
               02126 ;       .line   304; usb.c      byte reportID = SetupPacket.wValue0;
0004 C000 F000 02127         MOVFF   (_SetupPacket + 2), r0x00
0008 0000      02128         BANKSEL (_SetupPacket + 3)
               02129 ;       .line   310; usb.c      if (SetupPacket.wValue1 == 0x01)
000A 5100      02130         MOVF    (_SetupPacket + 3), W, B
000C 0A01      02131         XORLW   0x01
000E E100      02132         BNZ     _00148_DS_
               02133 ;       .line   311; usb.c      requestHandled = GetInputReport(reportID);
0010 5000      02134         MOVF    r0x00, W
0012 6EE5      02135         MOVWF   POSTDEC1
0014 EC00 F000 02136         CALL    _GetInputReport
0018 2AE1      02137         INCF    FSR1L, F
001A 0000      02138         BANKSEL _requestHandled
001C 6F00      02139         MOVWF   _requestHandled, B
001E D000      02140         BRA     _00150_DS_
0020           02141 _00148_DS_:
0020 0000      02142         BANKSEL (_SetupPacket + 3)
               02143 ;       .line   312; usb.c      else if (SetupPacket.wValue1 == 0x03)
0022 5100      02144         MOVF    (_SetupPacket + 3), W, B
0024 0A03      02145         XORLW   0x03
0026 E100      02146         BNZ     _00150_DS_
               02147 ;       .line   313; usb.c      requestHandled = GetFeatureReport(reportID);
0028 5000      02148         MOVF    r0x00, W
002A 6EE5      02149         MOVWF   POSTDEC1
002C EC00 F000 02150         CALL    _GetFeatureReport
0030 2AE1      02151         INCF    FSR1L, F
0032 0000      02152         BANKSEL _requestHandled
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0034 6F00      02153         MOVWF   _requestHandled, B
0036           02154 _00150_DS_:
0036 CFE4 F000 02155         MOVFF   PREINC1, r0x00
003A 0012      02156         RETURN  
               02157 
               02158 ; ; Starting pCode block
               02159 S_usb__HIDInitEndpoint  code
0000           02160 _HIDInitEndpoint:
               02161 ;       .line   281; usb.c      void HIDInitEndpoint(void)
0000 C000 FFE5 02162         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 02163         MOVFF   r0x01, POSTDEC1
0008 0000      02164         BANKSEL _hidRxLen
               02165 ;       .line   283; usb.c      hidRxLen =0;
000A 6B00      02166         CLRF    _hidRxLen, B
               02167 ;       .line   289; usb.c      UEP1 = 0x1E;
000C 0E1E      02168         MOVLW   0x1e
000E 6E00      02169         MOVWF   _UEP1
               02170 ;       .line   291; usb.c      ep1Bo.Cnt = sizeof(HIDRxBuffer);
0010 0E20      02171         MOVLW   0x20
0012 0000      02172         BANKSEL (_ep1Bo + 1)
0014 6F00      02173         MOVWF   (_ep1Bo + 1), B
               02174 ;       .line   292; usb.c      ep1Bo.ADDR = PTR16(&HIDRxBuffer);
0016 0E00      02175         MOVLW   LOW(_HIDRxBuffer)
0018 6E00      02176         MOVWF   r0x00
001A 0E00      02177         MOVLW   HIGH(_HIDRxBuffer)
001C 6E00      02178         MOVWF   r0x01
001E 5000      02179         MOVF    r0x00, W
               02180 ; removed redundant BANKSEL
0020 6F00      02181         MOVWF   (_ep1Bo + 2), B
0022 5000      02182         MOVF    r0x01, W
               02183 ; removed redundant BANKSEL
0024 6F00      02184         MOVWF   (_ep1Bo + 3), B
               02185 ;       .line   293; usb.c      ep1Bo.Stat = UOWN | DTSEN;
0026 0E88      02186         MOVLW   0x88
0028 0000      02187         BANKSEL _ep1Bo
002A 6F00      02188         MOVWF   _ep1Bo, B
               02189 ;       .line   295; usb.c      ep1Bi.ADDR = PTR16(&HIDTxBuffer);
002C 0E00      02190         MOVLW   LOW(_HIDTxBuffer)
002E 6E00      02191         MOVWF   r0x00
0030 0E00      02192         MOVLW   HIGH(_HIDTxBuffer)
0032 6E00      02193         MOVWF   r0x01
0034 5000      02194         MOVF    r0x00, W
0036 0000      02195         BANKSEL (_ep1Bi + 2)
0038 6F00      02196         MOVWF   (_ep1Bi + 2), B
003A 5000      02197         MOVF    r0x01, W
               02198 ; removed redundant BANKSEL
003C 6F00      02199         MOVWF   (_ep1Bi + 3), B
               02200 ;       .line   296; usb.c      ep1Bi.Stat = DTS;
003E 0E40      02201         MOVLW   0x40
0040 0000      02202         BANKSEL _ep1Bi
0042 6F00      02203         MOVWF   _ep1Bi, B
0044 CFE4 F000 02204         MOVFF   PREINC1, r0x01
0048 CFE4 F000 02205         MOVFF   PREINC1, r0x00
004C 0012      02206         RETURN  
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02207 
               02208 ; ; Starting pCode block
               02209 S_usb__HIDRxReport      code
0000           02210 _HIDRxReport:
               02211 ;       .line   237; usb.c      byte HIDRxReport(byte *buffer, byte len)
0000 CFD9 FFE5 02212         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02213         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02214         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02215         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02216         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02217         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02218         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02219         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02220         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02221         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 02222         MOVFF   r0x08, POSTDEC1
002C 0E02      02223         MOVLW   0x02
002E CFDB F000 02224         MOVFF   PLUSW2, r0x00
0032 0E03      02225         MOVLW   0x03
0034 CFDB F000 02226         MOVFF   PLUSW2, r0x01
0038 0E04      02227         MOVLW   0x04
003A CFDB F000 02228         MOVFF   PLUSW2, r0x02
003E 0E05      02229         MOVLW   0x05
0040 CFDB F000 02230         MOVFF   PLUSW2, r0x03
0044 0000      02231         BANKSEL _hidRxLen
               02232 ;       .line   239; usb.c      hidRxLen = 0;
0046 6B00      02233         CLRF    _hidRxLen, B
0048 0000      02234         BANKSEL _ep1Bo
               02235 ;       .line   246; usb.c      if(!(ep1Bo.Stat & UOWN))
004A BF00      02236         BTFSC   _ep1Bo, 7, B
004C D000      02237         BRA     _00132_DS_
               02238 ;       .line   249; usb.c      if(len > ep1Bo.Cnt)
004E 5000      02239         MOVF    r0x03, W
               02240 ; #     SUBWF   (_ep1Bo + 1), W, B
               02241 ; #     BTFSC   STATUS, 0
               02242 ; #     GOTO    _00127_DS_
               02243 ; #     MOVFF   (_ep1Bo + 1), r0x03
               02244 ; #     CLRF    _hidRxLen, B
               02245 ; ;     peep 1 - test/jump to test/skip
0050 0000      02246         BANKSEL (_ep1Bo + 1)
               02247 ;       .line   250; usb.c      len = ep1Bo.Cnt;
0052 5D00      02248         SUBWF   (_ep1Bo + 1), W, B
               02249 ;       .line   256; usb.c      for(hidRxLen = 0; hidRxLen < len; hidRxLen++)
0054 A0D8      02250         BTFSS   STATUS, 0
0056 C000 F000 02251         MOVFF   (_ep1Bo + 1), r0x03
005A 0000      02252         BANKSEL _hidRxLen
005C 6B00      02253         CLRF    _hidRxLen, B
005E           02254 _00133_DS_:
005E 5000      02255         MOVF    r0x03, W
0060 0000      02256         BANKSEL _hidRxLen
0062 5D00      02257         SUBWF   _hidRxLen, W, B
0064 E200      02258         BC      _00136_DS_
               02259 ; removed redundant BANKSEL
               02260 ;       .line   258; usb.c      buffer[hidRxLen] = HIDRxBuffer[hidRxLen];
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0066 5100      02261         MOVF    _hidRxLen, W, B
0068 2400      02262         ADDWF   r0x00, W
006A 6E00      02263         MOVWF   r0x04
006C 6AE8      02264         CLRF    WREG
006E 2000      02265         ADDWFC  r0x01, W
0070 6E00      02266         MOVWF   r0x05
0072 6AE8      02267         CLRF    WREG
0074 2000      02268         ADDWFC  r0x02, W
0076 6E00      02269         MOVWF   r0x06
0078 0E00      02270         MOVLW   LOW(_HIDRxBuffer)
               02271 ; removed redundant BANKSEL
007A 2500      02272         ADDWF   _hidRxLen, W, B
007C 6E00      02273         MOVWF   r0x07
007E 6A00      02274         CLRF    r0x08
0080 0E00      02275         MOVLW   HIGH(_HIDRxBuffer)
0082 2200      02276         ADDWFC  r0x08, F
0084 C000 FFE9 02277         MOVFF   r0x07, FSR0L
0088 C000 FFEA 02278         MOVFF   r0x08, FSR0H
008C CFEF F000 02279         MOVFF   INDF0, r0x07
0090 C000 FFE5 02280         MOVFF   r0x07, POSTDEC1
0094 C000 FFE9 02281         MOVFF   r0x04, FSR0L
0098 C000 FFF3 02282         MOVFF   r0x05, PRODL
009C 5000      02283         MOVF    r0x06, W
009E EC00 F000 02284         CALL    __gptrput1
00A2 0000      02285         BANKSEL _hidRxLen
               02286 ;       .line   256; usb.c      for(hidRxLen = 0; hidRxLen < len; hidRxLen++)
00A4 2B00      02287         INCF    _hidRxLen, F, B
00A6 D000      02288         BRA     _00133_DS_
00A8           02289 _00136_DS_:
               02290 ;       .line   268; usb.c      ep1Bo.Cnt = sizeof(HIDRxBuffer);
00A8 0E20      02291         MOVLW   0x20
00AA 0000      02292         BANKSEL (_ep1Bo + 1)
00AC 6F00      02293         MOVWF   (_ep1Bo + 1), B
00AE 0000      02294         BANKSEL _ep1Bo
               02295 ;       .line   269; usb.c      if(ep1Bo.Stat & DTS)
00B0 AD00      02296         BTFSS   _ep1Bo, 6, B
00B2 D000      02297         BRA     _00129_DS_
               02298 ;       .line   270; usb.c      ep1Bo.Stat = UOWN | DTSEN;
00B4 0E88      02299         MOVLW   0x88
               02300 ; removed redundant BANKSEL
00B6 6F00      02301         MOVWF   _ep1Bo, B
00B8 D000      02302         BRA     _00132_DS_
00BA           02303 _00129_DS_:
               02304 ;       .line   272; usb.c      ep1Bo.Stat = UOWN | DTS | DTSEN;
00BA 0EC8      02305         MOVLW   0xc8
00BC 0000      02306         BANKSEL _ep1Bo
00BE 6F00      02307         MOVWF   _ep1Bo, B
00C0           02308 _00132_DS_:
00C0 0000      02309         BANKSEL _hidRxLen
               02310 ;       .line   275; usb.c      return hidRxLen;
00C2 5100      02311         MOVF    _hidRxLen, W, B
00C4 CFE4 F000 02312         MOVFF   PREINC1, r0x08
00C8 CFE4 F000 02313         MOVFF   PREINC1, r0x07
00CC CFE4 F000 02314         MOVFF   PREINC1, r0x06
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D0 CFE4 F000 02315         MOVFF   PREINC1, r0x05
00D4 CFE4 F000 02316         MOVFF   PREINC1, r0x04
00D8 CFE4 F000 02317         MOVFF   PREINC1, r0x03
00DC CFE4 F000 02318         MOVFF   PREINC1, r0x02
00E0 CFE4 F000 02319         MOVFF   PREINC1, r0x01
00E4 CFE4 F000 02320         MOVFF   PREINC1, r0x00
00E8 CFE4 FFD9 02321         MOVFF   PREINC1, FSR2L
00EC 0012      02322         RETURN  
               02323 
               02324 ; ; Starting pCode block
               02325 S_usb__HIDTxReport      code
0000           02326 _HIDTxReport:
               02327 ;       .line   200; usb.c      byte HIDTxReport(byte *buffer, byte len)
0000 CFD9 FFE5 02328         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02329         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02330         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02331         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02332         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02333         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02334         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02335         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02336         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02337         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 02338         MOVFF   r0x08, POSTDEC1
002C 0E02      02339         MOVLW   0x02
002E CFDB F000 02340         MOVFF   PLUSW2, r0x00
0032 0E03      02341         MOVLW   0x03
0034 CFDB F000 02342         MOVFF   PLUSW2, r0x01
0038 0E04      02343         MOVLW   0x04
003A CFDB F000 02344         MOVFF   PLUSW2, r0x02
003E 0E05      02345         MOVLW   0x05
0040 CFDB F000 02346         MOVFF   PLUSW2, r0x03
0044 0000      02347         BANKSEL _ep1Bi
               02348 ;       .line   209; usb.c      if (ep1Bi.Stat & UOWN)
0046 AF00      02349         BTFSS   _ep1Bi, 7, B
0048 D000      02350         BRA     _00106_DS_
               02351 ;       .line   210; usb.c      return 0;
004A 6AE8      02352         CLRF    WREG
004C D000      02353         BRA     _00116_DS_
004E           02354 _00106_DS_:
               02355 ;       .line   213; usb.c      if(len > HID_INPUT_REPORT_BYTES)
004E 0E21      02356         MOVLW   0x21
0050 5C00      02357         SUBWF   r0x03, W
0052 E300      02358         BNC     _00121_DS_
               02359 ;       .line   214; usb.c      len = HID_INPUT_REPORT_BYTES;
0054 0E20      02360         MOVLW   0x20
0056 6E00      02361         MOVWF   r0x03
0058           02362 _00121_DS_:
               02363 ;       .line   220; usb.c      for (i = 0; i < len; i++)
0058 6A00      02364         CLRF    r0x04
005A           02365 _00112_DS_:
005A 5000      02366         MOVF    r0x03, W
005C 5C00      02367         SUBWF   r0x04, W
005E E200      02368         BC      _00115_DS_
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02369 ;       .line   221; usb.c      HIDTxBuffer[i] = buffer[i];
0060 0E00      02370         MOVLW   LOW(_HIDTxBuffer)
0062 2400      02371         ADDWF   r0x04, W
0064 6E00      02372         MOVWF   r0x05
0066 6A00      02373         CLRF    r0x06
0068 0E00      02374         MOVLW   HIGH(_HIDTxBuffer)
006A 2200      02375         ADDWFC  r0x06, F
006C 5000      02376         MOVF    r0x04, W
006E 2400      02377         ADDWF   r0x00, W
0070 6E00      02378         MOVWF   r0x07
0072 6AE8      02379         CLRF    WREG
0074 2000      02380         ADDWFC  r0x01, W
0076 6E00      02381         MOVWF   r0x08
0078 6AE8      02382         CLRF    WREG
007A 2000      02383         ADDWFC  r0x02, W
007C C000 FFE9 02384         MOVFF   r0x07, FSR0L
0080 C000 FFF3 02385         MOVFF   r0x08, PRODL
0084 EC00 F000 02386         CALL    __gptrget1
0088 6E00      02387         MOVWF   r0x07
008A C000 FFE9 02388         MOVFF   r0x05, FSR0L
008E C000 FFEA 02389         MOVFF   r0x06, FSR0H
0092 C000 FFEF 02390         MOVFF   r0x07, INDF0
               02391 ;       .line   220; usb.c      for (i = 0; i < len; i++)
0096 2A00      02392         INCF    r0x04, F
0098 D000      02393         BRA     _00112_DS_
009A           02394 _00115_DS_:
               02395 ;       .line   225; usb.c      ep1Bi.Cnt = len;
009A 5000      02396         MOVF    r0x03, W
009C 0000      02397         BANKSEL (_ep1Bi + 1)
009E 6F00      02398         MOVWF   (_ep1Bi + 1), B
00A0 0000      02399         BANKSEL _ep1Bi
               02400 ;       .line   226; usb.c      if(ep1Bi.Stat & DTS)
00A2 AD00      02401         BTFSS   _ep1Bi, 6, B
00A4 D000      02402         BRA     _00110_DS_
               02403 ;       .line   227; usb.c      ep1Bi.Stat = UOWN | DTSEN;
00A6 0E88      02404         MOVLW   0x88
               02405 ; removed redundant BANKSEL
00A8 6F00      02406         MOVWF   _ep1Bi, B
00AA D000      02407         BRA     _00111_DS_
00AC           02408 _00110_DS_:
               02409 ;       .line   229; usb.c      ep1Bi.Stat = UOWN | DTS | DTSEN;
00AC 0EC8      02410         MOVLW   0xc8
00AE 0000      02411         BANKSEL _ep1Bi
00B0 6F00      02412         MOVWF   _ep1Bi, B
00B2           02413 _00111_DS_:
               02414 ;       .line   231; usb.c      return len;
00B2 5000      02415         MOVF    r0x03, W
00B4           02416 _00116_DS_:
00B4 CFE4 F000 02417         MOVFF   PREINC1, r0x08
00B8 CFE4 F000 02418         MOVFF   PREINC1, r0x07
00BC CFE4 F000 02419         MOVFF   PREINC1, r0x06
00C0 CFE4 F000 02420         MOVFF   PREINC1, r0x05
00C4 CFE4 F000 02421         MOVFF   PREINC1, r0x04
00C8 CFE4 F000 02422         MOVFF   PREINC1, r0x03
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00CC CFE4 F000 02423         MOVFF   PREINC1, r0x02
00D0 CFE4 F000 02424         MOVFF   PREINC1, r0x01
00D4 CFE4 F000 02425         MOVFF   PREINC1, r0x00
00D8 CFE4 FFD9 02426         MOVFF   PREINC1, FSR2L
00DC 0012      02427         RETURN  
               02428 
               02429 ; ; Starting pCode block for Ival
               02430         code
0000           02431 _deviceDescriptor:
0000 0112 0200 02432         DB      0x12, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x6b, 0x1d, 0x02, 0x00
0004 0000 2000
0008 1D6B 0002
000C 0010 0201 02433         DB      0x10, 0x00, 0x01, 0x02, 0x00, 0x01
0010 0100
               02434 ; ; Starting pCode block for Ival
0012           02435 _configDescriptor:
0012 0209 0020 02436         DB      0x09, 0x02, 0x20, 0x00, 0x01, 0x01, 0x00, 0xa0, 0x32, 0x09, 0x04, 0x00
0016 0101 A000
001A 0932 0004
001E 0200 0107 02437         DB      0x00, 0x02, 0x07, 0x01, 0x02, 0x00, 0x07, 0x05, 0x01, 0x02, 0x20, 0x00
0022 0002 0507
0026 0201 0020
002A 0700 8205 02438         DB      0x00, 0x07, 0x05, 0x82, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002E 2002 0000
0032 0000 0000
0036 0000 0000 02439         DB      0x00, 0x00, 0x00, 0x00, 0x00
003A 0000
               02440 ; ; Starting pCode block for Ival
003C           02441 _HIDReport:
003C A006 09FF 02442         DB      0x06, 0xa0, 0xff, 0x09, 0x01, 0xa1, 0x01, 0x09, 0x02, 0x15, 0x00, 0x26
0040 A101 0901
0044 1502 2600
0048 FF00 0875 02443         DB      0x00, 0xff, 0x75, 0x08, 0x95, 0x20, 0x81, 0x02, 0x09, 0x02, 0x15, 0x00
004C 2095 0281
0050 0209 0015
0054 0026 75FF 02444         DB      0x26, 0x00, 0xff, 0x75, 0x08, 0x95, 0x20, 0x91, 0x02, 0x09, 0x01, 0x15
0058 9508 9120
005C 0902 1501
0060 2600 FF00 02445         DB      0x00, 0x26, 0x00, 0xff, 0x75, 0x08, 0x95, 0x20, 0xb1, 0x02, 0xc0
0064 0875 2095
0068 02B1 00C0
               02446 ; ; Starting pCode block for Ival
006C           02447 _stringDescriptor0:
006C 0304 0409 02448         DB      0x04, 0x03, 0x09, 0x04
               02449 ; ; Starting pCode block for Ival
0070           02450 _stringDescriptor1:
0070 030E 0048 02451         DB      0x0e, 0x03, 0x48, 0x00, 0x49, 0x00, 0x4a, 0x00, 0x4f, 0x00, 0x64, 0x00
0074 0049 004A
0078 004F 0064
007C 0065      02452         DB      0x65, 0x00
               02453 ; ; Starting pCode block for Ival
007E           02454 _stringDescriptor2:
007E 0320 0050 02455         DB      0x20, 0x03, 0x50, 0x00, 0x55, 0x00, 0x54, 0x00, 0x41, 0x00, 0x20, 0x00
0082 0055 0054
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0086 0041 0020
008A 0050 0049 02456         DB      0x50, 0x00, 0x49, 0x00, 0x43, 0x00, 0x43, 0x00, 0x48, 0x00, 0x4f, 0x00
008E 0043 0043
0092 0048 004F
0096 0054 004F 02457         DB      0x54, 0x00, 0x4f, 0x00, 0x21, 0x00, 0x21, 0x00
009A 0021 0021
               02458 
               02459 
               02460 ; Statistics:
               02461 ; code size:     3246 (0x0cae) bytes ( 2.48%)
               02462 ;                1623 (0x0657) words
               02463 ; udata size:     195 (0x00c3) bytes (10.88%)
               02464 ; access size:     10 (0x000a) bytes
               02465 
               02466 
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
TABLAT                            00000FF5
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
WREG                              00000FE8
_00106_DS_                        0000004E
_00110_DS_                        000000AC
_00111_DS_                        000000B2
_00112_DS_                        0000005A
_00115_DS_                        0000009A
_00116_DS_                        000000B4
_00121_DS_                        00000058
_00129_DS_                        000000BA
_00132_DS_                        000000C0
_00133_DS_                        0000005E
_00136_DS_                        000000A8
_00148_DS_                        00000020
_00150_DS_                        00000036
_00165_DS_                        00000020
_00167_DS_                        00000036
_00179_DS_                        00000018
_00180_DS_                        0000001A
_00186_DS_                        00000052
_00189_DS_                        00000074
_00191_DS_                        00000080
_00195_DS_                        000000F8
_00198_DS_                        000000D4
_00201_DS_                        000000C2
_00204_DS_                        0000009E
_00207_DS_                        0000008C
_00209_DS_                        00000108
_00224_DS_                        00000012
_00253_DS_                        000000AE
_00256_DS_                        00000098
_00257_DS_                        000000BC
_00261_DS_                        00000078
_00264_DS_                        00000042
_00268_DS_                        000000E0
_00277_DS_                        00000016
_00291_DS_                        00000032
_00295_DS_                        000000A2
_00301_DS_                        00000052
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00304_DS_                        00000044
_00305_DS_                        000000C8
_00308_DS_                        000000E4
_00322_DS_                        0000005A
_00328_DS_                        0000003E
_00333_DS_                        000000A0
_00335_DS_                        000000EC
_00338_DS_                        000000C8
_00346_DS_                        00000044
_00348_DS_                        0000010A
_00361_DS_                        00000028
_00365_DS_                        0000004C
_00369_DS_                        00000066
_00379_DS_                        0000001A
_00381_DS_                        0000005C
_00390_DS_                        000000D0
_00392_DS_                        000000A2
_00393_DS_                        000000A8
_00397_DS_                        00000096
_00400_DS_                        0000008C
_00403_DS_                        00000068
_00406_DS_                        0000003E
_00409_DS_                        00000032
_00411_DS_                        000000DC
_00448_DS_                        0000003C
_00449_DS_                        00000042
_00450_DS_                        0000008A
_00454_DS_                        000000F6
_00460_DS_                        00000030
_00465_DS_                        0000009A
_00470_DS_                        0000005A
_00474_DS_                        000000C4
_00480_DS_                        00000064
_00486_DS_                        00000078
_00488_DS_                        000000B8
_00491_DS_                        00000056
_00492_DS_                        000000E4
_00501_DS_                        0000006E
_00513_DS_                        00000052
_00516_DS_                        00000064
_00518_DS_                        00000070
_00521_DS_                        00000078
_00524_DS_                        00000028
_00529_DS_                        0000009E
_00532_DS_                        000000B6
_00535_DS_                        000000BE
_00540_DS_                        0000007E
_00542_DS_                        000000C2
_00577_DS_                        00000010
_00581_DS_                        0000002A
_00601_DS_                        00000016
_00615_DS_                        00000016
_00617_DS_                        00000026
_00631_DS_                        00000014
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00636_DS_                        0000002A
_00639_DS_                        00000034
_00642_DS_                        0000003E
_00645_DS_                        00000048
_00648_DS_                        00000050
_00655_DS_                        00000066
_100637_DS_                       00000090
_10628_DS_                        00000096
_20629_DS_                        0000009C
_30630_DS_                        000000B6
_40631_DS_                        000000BC
_50632_DS_                        000000CC
_60633_DS_                        000000D2
_70634_DS_                        000000EC
_80635_DS_                        000000F2
_90636_DS_                        0000008E
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCONbits                      00000000
_BSR                              00000000
_BSRbits                          00000000
_BusReset                         00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EEDATA                           00000000
_EnableUSBModule                  00000000
_FSR0H                            00000000
_FSR0Hbits                        00000000
_FSR0L                            00000000
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_FSR1H                            00000000
_FSR1Hbits                        00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2Hbits                        00000000
_FSR2L                            00000000
_GetDescriptor                    00000000
_GetFeatureReport                 00000000
_GetInputReport                   00000000
_GetStatus                        00000000
_HIDGetReport                     00000000
_HIDInitEndpoint                  00000000
_HIDPostProcess                   00000000
_HIDReport                        0000003C
_HIDRxBuffer                      00000020
_HIDRxReport                      00000000
_HIDSetReport                     00000000
_HIDTxBuffer                      00000000
_HIDTxReport                      00000000
_HLVDCON                          00000000
_HLVDCONbits                      00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_InDataStage                      00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_OutDataStage                     00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATHbits                       00000000
_PCLATU                           00000000
_PCLATUbits                       00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PIE2bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PRODH                            00000000
_PRODL                            00000000
_ProcessControlTransfer           00000000
_ProcessHIDRequest                00000000
_ProcessStandardRequest           00000000
_ProcessUSBTransactions           00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRGH                           00000000
_SPPCFG                           00000000
_SPPCFGbits                       00000000
_SPPCON                           00000000
_SPPCONbits                       00000000
_SPPDATA                          00000000
_SPPDATAbits                      00000000
_SPPEPS                           00000000
_SPPEPSbits                       00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_SetFeature                       00000000
_SetFeatureReport                 00000000
_SetOutputReport                  00000000
_SetupFeatureReport               00000000
_SetupOutputReport                00000000
_SetupPacket                      00000040
_SetupStage                       00000000
_Stall                            00000000
_StartOfFrame                     00000000
_Suspend                          00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_TABLAT                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TBLPTRUbits                      00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TOSUbits                         00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_UADDR                            00000000
_UADDRbits                        00000000
_UCFG                             00000000
_UCFGbits                         00000000
_UCON                             00000000
_UCONbits                         00000000
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_UEIE                             00000000
_UEIEbits                         00000000
_UEIR                             00000000
_UEIRbits                         00000000
_UEP0                             00000000
_UEP0bits                         00000000
_UEP1                             00000000
_UEP10                            00000000
_UEP10bits                        00000000
_UEP11                            00000000
_UEP11bits                        00000000
_UEP12                            00000000
_UEP12bits                        00000000
_UEP13                            00000000
_UEP13bits                        00000000
_UEP14                            00000000
_UEP14bits                        00000000
_UEP15                            00000000
_UEP15bits                        00000000
_UEP1bits                         00000000
_UEP2                             00000000
_UEP2bits                         00000000
_UEP3                             00000000
_UEP3bits                         00000000
_UEP4                             00000000
_UEP4bits                         00000000
_UEP5                             00000000
_UEP5bits                         00000000
_UEP6                             00000000
_UEP6bits                         00000000
_UEP7                             00000000
_UEP7bits                         00000000
_UEP8                             00000000
_UEP8bits                         00000000
_UEP9                             00000000
_UEP9bits                         00000000
_UFRMH                            00000000
_UFRMHbits                        00000000
_UFRML                            00000000
_UFRMLbits                        00000000
_UIE                              00000000
_UIEbits                          00000000
_UIR                              00000000
_UIRbits                          00000000
_USTAT                            00000000
_USTATbits                        00000000
_UnSuspend                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
_WaitForSetupStage                00000000
__18F4550                         00000001
__gptrget1                        00000000
__gptrput1                        00000000
gpasm-0.13.4 beta               usb.asm     2-25-2008  20:19:46          PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_configDescriptor                 00000012
_controlTransferBuffer            00000080
_ctrlTransferStage                00000000
_currentConfiguration             00000000
_dataEEPROM                       00F00000
_deviceAddress                    00000000
_deviceDescriptor                 00000000
_deviceState                      00000000
_ep0Bi                            00000404
_ep0Bo                            00000400
_ep1Bi                            0000040C
_ep1Bo                            00000408
_hidIdleRate                      00000000
_hidProtocol                      00000000
_hidRxLen                         00000000
_inPtr                            00000000
_outPtr                           00000000
_remoteWakeup                     00000000
_requestHandled                   00000000
_selfPowered                      00000000
_stdin                            00000000
_stdout                           00000000
_stringDescriptor0                0000006C
_stringDescriptor1                00000070
_stringDescriptor2                0000007E
_wCount                           00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

